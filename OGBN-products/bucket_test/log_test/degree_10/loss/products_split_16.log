main start at this time 1670385510.5754764
-----------------------------------------before load data 
 Nvidia-smi: 0.2530517578125 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

#nodes: 2449029
#edges: 123718024
#classes: 47
success----------------------------------------
196571
39255
2164782
# Nodes: 2400608
# Edges: 123718024
# Train: 196571
# Val: 39255
# Test: 2164782
# Classes: 47

----------------------------------------start of run function 
 Nvidia-smi: 0.2530517578125 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

in feats:  100
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.3643798828125 GB
    Memory Allocated: 0.3189716339111328  GigaBytes
Max Memory Allocated: 0.3197941780090332  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 12273, 12274, 12275], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.0909423828125 GB
    Memory Allocated: 1.147392749786377  GigaBytes
Max Memory Allocated: 1.88673734664917  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2913)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.0987548828125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.88673734664917  GigaBytes

v3.py : output nodes local nid:  tensor([12276, 12277, 12278, 12279, 12280, 12281, 12282, 12283, 12284, 12285],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.0987548828125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.88673734664917  GigaBytes

core.py bucket local nid tensor([12276, 12277, 12278,  ..., 24593, 24594, 24595], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1502046585083008  GigaBytes
Max Memory Allocated: 1.923966884613037  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2946)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.923966884613037  GigaBytes

v3.py : output nodes local nid:  tensor([24596, 24597, 24598, 24599, 24600, 24601, 24602, 24603, 24604, 24605],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.923966884613037  GigaBytes

core.py bucket local nid tensor([24596, 24597, 24598,  ..., 36880, 36881, 36882], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1499290466308594  GigaBytes
Max Memory Allocated: 1.9243345260620117  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2929)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.9243345260620117  GigaBytes

v3.py : output nodes local nid:  tensor([36883, 36884, 36885, 36886, 36887, 36888, 36889, 36890, 36891, 36892],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.9243345260620117  GigaBytes

core.py bucket local nid tensor([36883, 36884, 36885,  ..., 49177, 49178, 49179], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1499290466308594  GigaBytes
Max Memory Allocated: 1.9243345260620117  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2960)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.35683774948120117  GigaBytes
Max Memory Allocated: 1.9243345260620117  GigaBytes

v3.py : output nodes local nid:  tensor([49180, 49181, 49182, 49183, 49184, 49185, 49186, 49187, 49188, 49189],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.35683774948120117  GigaBytes
Max Memory Allocated: 1.9243345260620117  GigaBytes

core.py bucket local nid tensor([49180, 49181, 49182,  ..., 61454, 61455, 61456], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.150841236114502  GigaBytes
Max Memory Allocated: 1.9246034622192383  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2968)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3565974235534668  GigaBytes
Max Memory Allocated: 1.9246034622192383  GigaBytes

v3.py : output nodes local nid:  tensor([61457, 61458, 61459, 61460, 61461, 61462, 61463, 61464, 61465, 61466],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3565974235534668  GigaBytes
Max Memory Allocated: 1.9246034622192383  GigaBytes

core.py bucket local nid tensor([61457, 61458, 61459,  ..., 73735, 73736, 73737], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1509671211242676  GigaBytes
Max Memory Allocated: 1.924729347229004  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2931)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.35686731338500977  GigaBytes
Max Memory Allocated: 1.924729347229004  GigaBytes

v3.py : output nodes local nid:  tensor([73738, 73739, 73740, 73741, 73742, 73743, 73744, 73745, 73746, 73747],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.35686731338500977  GigaBytes
Max Memory Allocated: 1.924729347229004  GigaBytes

core.py bucket local nid tensor([73738, 73739, 73740,  ..., 86038, 86039, 86040], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1509966850280762  GigaBytes
Max Memory Allocated: 1.9247589111328125  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2916)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.9247589111328125  GigaBytes

v3.py : output nodes local nid:  tensor([86041, 86042, 86043, 86044, 86045, 86046, 86047, 86048, 86050, 86051],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.9247589111328125  GigaBytes

core.py bucket local nid tensor([86041, 86042, 86043,  ..., 98323, 98324, 98325], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1499290466308594  GigaBytes
Max Memory Allocated: 1.9247589111328125  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2947)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.9247589111328125  GigaBytes

v3.py : output nodes local nid:  tensor([98326, 98327, 98328, 98329, 98330, 98331, 98332, 98333, 98334, 98335],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.9247589111328125  GigaBytes

core.py bucket local nid tensor([ 98326,  98327,  98328,  ..., 110586, 110587, 110588], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.150827407836914  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2957)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([110589, 110590, 110591, 110592, 110593, 110594, 110595, 110596, 110597,
        110598], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3559255599975586  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([110589, 110590, 110591,  ..., 122860, 122861, 122862], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1499290466308594  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2915)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([122863, 122864, 122865, 122866, 122867, 122868, 122869, 122870, 122871,
        122872], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([122863, 122864, 122865,  ..., 135114, 135115, 135116], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1506915092468262  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2910)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([135118, 135119, 135120, 135121, 135122, 135123, 135124, 135125, 135126,
        135127], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([135118, 135119, 135120,  ..., 147382, 147383, 147384], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1506915092468262  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2927)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([147385, 147386, 147387, 147388, 147389, 147390, 147391, 147392, 147393,
        147394], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([147385, 147386, 147387,  ..., 159666, 159667, 159668], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1506915092468262  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2920)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([159669, 159670, 159671, 159672, 159673, 159674, 159675, 159676, 159677,
        159678], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([159669, 159670, 159671,  ..., 171977, 171978, 171979], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1506915092468262  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2950)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([171980, 171981, 171982, 171983, 171984, 171985, 171986, 171987, 171988,
        171989], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([171980, 171981, 171982,  ..., 184286, 184287, 184288], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1506915092468262  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2940)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566880226135254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([184289, 184290, 184291, 184292, 184293, 184294, 184295, 184296, 184297,
        184298], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3566875457763672  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([184289, 184290, 184291,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12024
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 1.1498866081237793  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12024 ratio: 0.06116873801323695 bucket_loss : tensor(0.2935)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.356687068939209  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.6964)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.3573622703552246  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes


 Run 0| Epoch 0 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.1749267578125 GB
    Memory Allocated: 0.35700559616088867  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 12287, 12288, 12289], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1510090827941895  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2917)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3570060729980469  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([12290, 12291, 12292, 12293, 12294, 12295, 12296, 12297, 12298, 12300],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3570060729980469  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([12290, 12291, 12292,  ..., 24546, 24547, 24548], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1510095596313477  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2887)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([24549, 24550, 24551, 24552, 24553, 24554, 24555, 24556, 24557, 24558],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([24549, 24550, 24551,  ..., 36848, 36849, 36850], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1502470970153809  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2900)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3570060729980469  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([36851, 36852, 36853, 36854, 36855, 36856, 36857, 36858, 36859, 36860],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3570060729980469  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([36851, 36852, 36853,  ..., 49132, 49133, 49134], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1510095596313477  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2911)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35703563690185547  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([49135, 49136, 49137, 49138, 49140, 49141, 49142, 49143, 49144, 49145],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35703563690185547  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([49135, 49136, 49137,  ..., 61433, 61434, 61435], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1510391235351562  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2879)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([61436, 61437, 61438, 61439, 61440, 61441, 61442, 61443, 61444, 61445],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([61436, 61437, 61438,  ..., 73728, 73729, 73730], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1505227088928223  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2902)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([73731, 73732, 73733, 73734, 73735, 73736, 73737, 73738, 73739, 73740],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([73731, 73732, 73733,  ..., 86005, 86006, 86007], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1502470970153809  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2880)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([86008, 86009, 86010, 86011, 86012, 86013, 86014, 86015, 86016, 86017],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([86008, 86009, 86010,  ..., 98299, 98300, 98301], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1505227088928223  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2905)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([98302, 98303, 98304, 98305, 98306, 98307, 98308, 98309, 98310, 98311],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([ 98302,  98303,  98304,  ..., 110582, 110583, 110584], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1502470970153809  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2912)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([110585, 110586, 110587, 110588, 110589, 110590, 110591, 110592, 110593,
        110594], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([110585, 110586, 110587,  ..., 122847, 122848, 122849], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1505227088928223  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2910)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([122850, 122851, 122852, 122853, 122854, 122855, 122856, 122857, 122858,
        122859], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([122850, 122851, 122852,  ..., 135132, 135133, 135134], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1502470970153809  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2892)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([135135, 135136, 135137, 135138, 135139, 135140, 135141, 135142, 135143,
        135144], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([135135, 135136, 135137,  ..., 147433, 147434, 147435], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1505227088928223  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2872)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([147436, 147437, 147438, 147439, 147440, 147441, 147442, 147443, 147444,
        147445], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([147436, 147437, 147438,  ..., 159728, 159729, 159730], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1502470970153809  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2896)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([159731, 159732, 159733, 159734, 159735, 159736, 159737, 159738, 159739,
        159740], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([159731, 159732, 159733,  ..., 171995, 171996, 171997], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1505227088928223  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2903)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([171998, 171999, 172000, 172001, 172002, 172003, 172004, 172005, 172006,
        172007], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([171998, 171999, 172000,  ..., 184314, 184315, 184316], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1502470970153809  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2876)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562436103820801  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([184317, 184318, 184319, 184320, 184321, 184322, 184323, 184324, 184325,
        184326], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3562431335449219  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([184317, 184318, 184319,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12024
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1497349739074707  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12024 ratio: 0.06116873801323695 bucket_loss : tensor(0.2895)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35624027252197266  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.6336)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35624027252197266  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes


 Run 0| Epoch 1 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.356597900390625  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 12299, 12300, 12301], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506013870239258  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2860)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([12302, 12303, 12304, 12305, 12306, 12307, 12308, 12309, 12310, 12311],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([12302, 12303, 12304,  ..., 24571, 24572, 24573], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2860)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([24574, 24575, 24577, 24578, 24579, 24580, 24581, 24582, 24583, 24584],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([24574, 24575, 24577,  ..., 36870, 36871, 36872], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2858)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([36873, 36874, 36875, 36876, 36877, 36878, 36879, 36880, 36881, 36882],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([36873, 36874, 36875,  ..., 49153, 49154, 49155], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2845)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([49156, 49157, 49158, 49159, 49160, 49161, 49162, 49163, 49164, 49165],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([49156, 49157, 49158,  ..., 61416, 61417, 61418], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2833)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([61419, 61420, 61421, 61422, 61423, 61424, 61425, 61426, 61427, 61428],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([61419, 61420, 61421,  ..., 73690, 73691, 73692], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2855)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([73693, 73694, 73695, 73696, 73697, 73698, 73699, 73700, 73701, 73702],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([73693, 73694, 73695,  ..., 86002, 86003, 86004], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2908)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([86005, 86006, 86007, 86008, 86009, 86010, 86011, 86012, 86013, 86014],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([86005, 86006, 86007,  ..., 98313, 98314, 98315], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2843)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([98316, 98317, 98318, 98319, 98320, 98321, 98322, 98323, 98325, 98326],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([ 98316,  98317,  98318,  ..., 110590, 110591, 110592], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2865)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([110593, 110594, 110595, 110596, 110597, 110598, 110599, 110600, 110601,
        110602], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([110593, 110594, 110595,  ..., 122907, 122908, 122909], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2842)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([122910, 122911, 122912, 122913, 122914, 122915, 122916, 122917, 122918,
        122919], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([122910, 122911, 122912,  ..., 135182, 135183, 135184], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2872)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([135185, 135186, 135187, 135188, 135189, 135190, 135191, 135192, 135193,
        135194], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([135185, 135186, 135187,  ..., 147458, 147459, 147460], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2845)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([147461, 147462, 147463, 147464, 147465, 147466, 147467, 147468, 147469,
        147470], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([147461, 147462, 147463,  ..., 159726, 159727, 159728], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2839)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([159729, 159730, 159731, 159732, 159733, 159734, 159735, 159736, 159737,
        159738], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([159729, 159730, 159731,  ..., 172003, 172004, 172005], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2870)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([172006, 172007, 172008, 172009, 172010, 172011, 172012, 172013, 172014,
        172015], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([172006, 172007, 172008,  ..., 184310, 184311, 184312], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2870)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([184313, 184314, 184315, 184316, 184317, 184318, 184319, 184320, 184321,
        184322], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569459915161133  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([184313, 184314, 184315,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12024
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1501450538635254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12024 ratio: 0.06116873801323695 bucket_loss : tensor(0.2837)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3565974235534668  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.5703)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3565974235534668  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes


 Run 0| Epoch 2 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560471534729004  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 12287, 12288, 12289], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500506401062012  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2801)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3568601608276367  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([12290, 12291, 12292, 12293, 12294, 12295, 12296, 12297, 12298, 12299],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3568601608276367  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([12290, 12291, 12292,  ..., 24585, 24586, 24587], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1508636474609375  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2819)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.356842041015625  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([24588, 24589, 24590, 24591, 24592, 24593, 24594, 24595, 24596, 24597],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.356842041015625  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([24588, 24589, 24590,  ..., 36883, 36884, 36885], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1508455276489258  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2812)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([36886, 36887, 36888, 36889, 36890, 36891, 36892, 36893, 36894, 36895],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([36886, 36887, 36888,  ..., 49195, 49196, 49197], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1503291130065918  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2803)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([49198, 49199, 49200, 49201, 49202, 49203, 49204, 49205, 49206, 49207],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([49198, 49199, 49200,  ..., 61463, 61464, 61465], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500535011291504  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2823)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([61466, 61467, 61468, 61471, 61472, 61473, 61474, 61475, 61476, 61477],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([61466, 61467, 61468,  ..., 73767, 73768, 73769], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1503291130065918  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2816)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([73770, 73771, 73772, 73773, 73774, 73775, 73776, 73777, 73778, 73779],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([73770, 73771, 73772,  ..., 86048, 86049, 86050], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500535011291504  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2821)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([86051, 86052, 86053, 86054, 86055, 86056, 86057, 86058, 86059, 86060],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([86051, 86052, 86053,  ..., 98310, 98311, 98312], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1503291130065918  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2822)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([98313, 98314, 98315, 98316, 98317, 98318, 98319, 98320, 98322, 98323],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([ 98313,  98314,  98315,  ..., 110617, 110618, 110619], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500535011291504  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2803)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([110620, 110621, 110622, 110623, 110624, 110625, 110626, 110627, 110628,
        110629], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([110620, 110621, 110622,  ..., 122905, 122906, 122907], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1503291130065918  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2796)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([122908, 122909, 122910, 122911, 122912, 122913, 122914, 122915, 122916,
        122917], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([122908, 122909, 122910,  ..., 135212, 135213, 135214], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500535011291504  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2796)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([135215, 135216, 135217, 135218, 135219, 135220, 135221, 135222, 135223,
        135224], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([135215, 135216, 135217,  ..., 147449, 147450, 147451], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1503291130065918  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2825)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([147452, 147453, 147454, 147455, 147456, 147457, 147458, 147459, 147460,
        147461], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([147452, 147453, 147454,  ..., 159728, 159729, 159730], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500535011291504  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2804)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([159731, 159732, 159733, 159734, 159735, 159736, 159737, 159738, 159739,
        159740], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([159731, 159732, 159733,  ..., 172023, 172024, 172025], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1503291130065918  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2847)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([172026, 172027, 172028, 172029, 172030, 172031, 172032, 172033, 172034,
        172035], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([172026, 172027, 172028,  ..., 184297, 184298, 184299], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500535011291504  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2871)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560500144958496  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([184300, 184301, 184302, 184303, 184304, 184305, 184306, 184307, 184308,
        184310], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560495376586914  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([184300, 184301, 184302,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12024
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1495413780212402  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12024 ratio: 0.06116873801323695 bucket_loss : tensor(0.2818)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560466766357422  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.5078)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3560466766357422  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes


 Run 0| Epoch 3 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.356597900390625  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 12284, 12285, 12286], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506013870239258  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2779)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([12287, 12288, 12289, 12290, 12291, 12292, 12293, 12294, 12295, 12296],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([12287, 12288, 12289,  ..., 24573, 24574, 24575], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2755)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([24576, 24577, 24578, 24579, 24580, 24581, 24582, 24583, 24584, 24585],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([24576, 24577, 24578,  ..., 36852, 36853, 36854], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2790)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([36855, 36856, 36857, 36858, 36859, 36860, 36861, 36862, 36863, 36864],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([36855, 36856, 36857,  ..., 49122, 49123, 49124], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2772)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([49125, 49126, 49127, 49128, 49129, 49130, 49131, 49132, 49133, 49134],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([49125, 49126, 49127,  ..., 61393, 61394, 61395], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2760)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([61396, 61397, 61398, 61399, 61400, 61401, 61402, 61403, 61404, 61405],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([61396, 61397, 61398,  ..., 73687, 73688, 73689], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2798)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([73690, 73691, 73692, 73693, 73694, 73695, 73696, 73697, 73698, 73699],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([73690, 73691, 73692,  ..., 86013, 86014, 86015], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2825)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([86016, 86017, 86018, 86019, 86020, 86021, 86022, 86023, 86024, 86025],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([86016, 86017, 86018,  ..., 98300, 98301, 98302], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2763)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([98303, 98304, 98305, 98306, 98307, 98308, 98309, 98310, 98311, 98312],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([ 98303,  98304,  98305,  ..., 110572, 110573, 110574], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2749)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([110575, 110576, 110577, 110578, 110579, 110580, 110581, 110582, 110583,
        110584], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([110575, 110576, 110577,  ..., 122878, 122879, 122880], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2776)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([122881, 122882, 122883, 122884, 122885, 122886, 122887, 122888, 122889,
        122890], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([122881, 122882, 122883,  ..., 135177, 135178, 135179], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2764)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([135180, 135181, 135182, 135183, 135184, 135185, 135186, 135187, 135188,
        135189], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([135180, 135181, 135182,  ..., 147449, 147450, 147451], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2784)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([147452, 147453, 147454, 147455, 147456, 147457, 147458, 147459, 147460,
        147461], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([147452, 147453, 147454,  ..., 159721, 159722, 159723], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2777)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([159724, 159725, 159726, 159727, 159728, 159729, 159730, 159731, 159733,
        159734], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([159724, 159725, 159726,  ..., 171995, 171996, 171997], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2823)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([171998, 171999, 172000, 172001, 172002, 172003, 172004, 172005, 172006,
        172007], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([171998, 171999, 172000,  ..., 184294, 184295, 184296], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2759)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([184297, 184298, 184299, 184300, 184301, 184302, 184304, 184305, 184306,
        184307], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569459915161133  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([184297, 184298, 184299,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12024
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1501450538635254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12024 ratio: 0.06116873801323695 bucket_loss : tensor(0.2773)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3565974235534668  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.4446)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3565974235534668  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes


 Run 0| Epoch 4 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35620832443237305  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 12262, 12263, 12264], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1502118110656738  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2751)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3570213317871094  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([12265, 12266, 12267, 12268, 12269, 12270, 12271, 12272, 12273, 12274],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3570213317871094  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([12265, 12266, 12267,  ..., 24529, 24530, 24531], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1510248184204102  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2754)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35700321197509766  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([24532, 24533, 24534, 24535, 24536, 24537, 24538, 24539, 24540, 24541],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35700321197509766  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([24532, 24533, 24534,  ..., 36852, 36853, 36854], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1510066986083984  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2727)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([36855, 36856, 36857, 36858, 36859, 36860, 36861, 36862, 36863, 36864],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([36855, 36856, 36857,  ..., 49149, 49150, 49151], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1504902839660645  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2750)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([49152, 49153, 49154, 49155, 49156, 49157, 49158, 49159, 49160, 49161],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([49152, 49153, 49154,  ..., 61426, 61427, 61428], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150214672088623  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2748)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([61429, 61430, 61431, 61432, 61433, 61434, 61435, 61436, 61437, 61438],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([61429, 61430, 61431,  ..., 73740, 73741, 73742], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1504902839660645  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2712)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([73743, 73744, 73745, 73746, 73747, 73748, 73749, 73750, 73751, 73752],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([73743, 73744, 73745,  ..., 86014, 86015, 86016], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150214672088623  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2753)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([86017, 86018, 86019, 86020, 86021, 86022, 86024, 86025, 86026, 86027],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([86017, 86018, 86019,  ..., 98299, 98300, 98301], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1504902839660645  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2739)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([98302, 98303, 98305, 98306, 98307, 98308, 98309, 98310, 98312, 98313],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([ 98302,  98303,  98305,  ..., 110599, 110601, 110602], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150214672088623  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2710)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([110603, 110604, 110605, 110606, 110607, 110608, 110609, 110610, 110611,
        110612], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([110603, 110604, 110605,  ..., 122872, 122873, 122874], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1504902839660645  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2748)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([122875, 122876, 122877, 122878, 122879, 122880, 122881, 122882, 122883,
        122884], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([122875, 122876, 122877,  ..., 135143, 135144, 135145], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150214672088623  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2748)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([135146, 135147, 135148, 135149, 135150, 135151, 135153, 135154, 135156,
        135157], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([135146, 135147, 135148,  ..., 147419, 147420, 147421], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1504902839660645  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2730)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([147422, 147424, 147425, 147426, 147427, 147428, 147429, 147430, 147431,
        147432], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([147422, 147424, 147425,  ..., 159701, 159702, 159703], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150214672088623  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2755)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([159704, 159705, 159706, 159707, 159708, 159709, 159710, 159711, 159712,
        159713], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([159704, 159705, 159706,  ..., 171961, 171963, 171964], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1504902839660645  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2722)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([171965, 171966, 171967, 171968, 171969, 171970, 171971, 171972, 171973,
        171974], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([171965, 171966, 171967,  ..., 184255, 184256, 184257], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150214672088623  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2722)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621118545532227  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([184258, 184259, 184260, 184261, 184262, 184263, 184264, 184265, 184266,
        184267], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35621070861816406  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([184258, 184259, 184260,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12024
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.149702548980713  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12024 ratio: 0.06116873801323695 bucket_loss : tensor(0.2738)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35620784759521484  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.3810)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35620784759521484  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes


 Run 0| Epoch 5 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.356597900390625  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 12260, 12261, 12262], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506013870239258  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2702)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([12263, 12264, 12265, 12266, 12267, 12268, 12269, 12270, 12271, 12272],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([12263, 12264, 12265,  ..., 24548, 24549, 24550], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2676)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([24551, 24552, 24553, 24555, 24556, 24557, 24558, 24559, 24560, 24561],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([24551, 24552, 24553,  ..., 36825, 36826, 36827], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2710)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([36828, 36829, 36830, 36831, 36832, 36833, 36834, 36835, 36836, 36837],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([36828, 36829, 36830,  ..., 49107, 49108, 49109], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2696)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([49110, 49111, 49112, 49113, 49114, 49115, 49116, 49117, 49118, 49119],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([49110, 49111, 49112,  ..., 61372, 61373, 61374], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2696)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([61375, 61376, 61377, 61378, 61379, 61380, 61381, 61382, 61383, 61384],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([61375, 61376, 61377,  ..., 73667, 73668, 73669], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2685)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([73670, 73671, 73672, 73673, 73674, 73675, 73676, 73677, 73678, 73679],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([73670, 73671, 73672,  ..., 85955, 85956, 85957], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2688)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([85958, 85959, 85960, 85961, 85962, 85963, 85964, 85965, 85966, 85967],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([85958, 85959, 85960,  ..., 98240, 98241, 98242], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2696)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([98243, 98244, 98245, 98246, 98247, 98248, 98249, 98250, 98251, 98252],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([ 98243,  98244,  98245,  ..., 110559, 110560, 110561], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2695)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([110562, 110563, 110564, 110565, 110566, 110567, 110569, 110570, 110571,
        110572], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([110562, 110563, 110564,  ..., 122847, 122848, 122849], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2726)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([122850, 122851, 122852, 122853, 122854, 122855, 122856, 122857, 122858,
        122859], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([122850, 122851, 122852,  ..., 135158, 135159, 135160], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2701)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([135161, 135162, 135163, 135164, 135165, 135166, 135167, 135168, 135169,
        135170], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([135161, 135162, 135163,  ..., 147465, 147466, 147467], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2691)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([147468, 147469, 147470, 147471, 147472, 147473, 147474, 147475, 147476,
        147477], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([147468, 147469, 147470,  ..., 159749, 159750, 159751], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2730)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([159752, 159753, 159754, 159755, 159756, 159757, 159758, 159759, 159760,
        159761], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([159752, 159753, 159754,  ..., 172053, 172055, 172056], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2664)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([172057, 172058, 172059, 172060, 172061, 172062, 172063, 172064, 172065,
        172066], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([172057, 172058, 172059,  ..., 184320, 184321, 184322], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2705)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([184323, 184324, 184326, 184327, 184328, 184329, 184330, 184331, 184332,
        184333], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569459915161133  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([184323, 184324, 184326,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12024
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1501450538635254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12024 ratio: 0.06116873801323695 bucket_loss : tensor(0.2702)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3565974235534668  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.3164)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3565974235534668  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes


 Run 0| Epoch 6 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558049201965332  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 12273, 12274, 12275], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.149808406829834  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2662)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35661792755126953  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([12276, 12277, 12278, 12279, 12280, 12281, 12282, 12283, 12284, 12285],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35661792755126953  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([12276, 12277, 12278,  ..., 24571, 24572, 24573], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506214141845703  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2656)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3565998077392578  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([24574, 24575, 24576, 24577, 24578, 24579, 24580, 24581, 24582, 24583],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3565998077392578  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([24574, 24575, 24576,  ..., 36804, 36805, 36806], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506032943725586  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2651)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([36807, 36808, 36809, 36810, 36811, 36812, 36813, 36814, 36815, 36816],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([36807, 36808, 36809,  ..., 49091, 49092, 49093], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500868797302246  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2657)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([49094, 49095, 49096, 49097, 49098, 49099, 49100, 49101, 49102, 49103],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([49094, 49095, 49096,  ..., 61371, 61372, 61373], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1498112678527832  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2682)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([61374, 61375, 61376, 61377, 61379, 61380, 61381, 61383, 61384, 61385],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([61374, 61375, 61376,  ..., 73659, 73660, 73661], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500868797302246  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2669)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([73662, 73663, 73664, 73665, 73666, 73667, 73668, 73669, 73670, 73671],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([73662, 73663, 73664,  ..., 85960, 85961, 85962], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1498112678527832  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2633)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([85963, 85964, 85965, 85966, 85967, 85968, 85969, 85970, 85971, 85972],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([85963, 85964, 85965,  ..., 98262, 98263, 98264], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500868797302246  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2631)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([98265, 98266, 98267, 98268, 98269, 98270, 98271, 98272, 98273, 98274],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([ 98265,  98266,  98267,  ..., 110574, 110575, 110576], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1498112678527832  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2647)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([110577, 110578, 110579, 110580, 110581, 110582, 110583, 110584, 110585,
        110586], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([110577, 110578, 110579,  ..., 122873, 122874, 122875], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500868797302246  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2657)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([122876, 122877, 122878, 122879, 122880, 122881, 122882, 122883, 122884,
        122885], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([122876, 122877, 122878,  ..., 135161, 135162, 135163], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1498112678527832  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2665)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([135164, 135165, 135166, 135167, 135168, 135169, 135170, 135171, 135172,
        135173], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([135164, 135165, 135166,  ..., 147421, 147422, 147423], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500868797302246  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2644)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([147424, 147425, 147426, 147427, 147428, 147429, 147430, 147431, 147432,
        147433], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([147424, 147425, 147426,  ..., 159722, 159723, 159724], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1498112678527832  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2658)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([159725, 159726, 159727, 159728, 159729, 159730, 159731, 159732, 159733,
        159734], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([159725, 159726, 159727,  ..., 172000, 172001, 172002], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1500868797302246  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2638)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([172003, 172004, 172005, 172006, 172007, 172008, 172009, 172010, 172011,
        172012], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([172003, 172004, 172005,  ..., 184280, 184281, 184282], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1498112678527832  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2675)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558077812194824  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([184283, 184284, 184285, 184286, 184287, 184288, 184289, 184290, 184291,
        184292], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3558073043823242  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([184283, 184284, 184285,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12024
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.149299144744873  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12024 ratio: 0.06116873801323695 bucket_loss : tensor(0.2682)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.355804443359375  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.2505)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.355804443359375  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes


 Run 0| Epoch 7 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.356597900390625  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 12287, 12288, 12289], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506013870239258  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2626)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([12290, 12291, 12292, 12293, 12294, 12295, 12296, 12297, 12298, 12299],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([12290, 12291, 12292,  ..., 24592, 24593, 24594], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2635)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([24595, 24596, 24597, 24598, 24599, 24600, 24601, 24602, 24603, 24604],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([24595, 24596, 24597,  ..., 36913, 36914, 36915], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2614)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([36917, 36918, 36919, 36920, 36921, 36922, 36923, 36924, 36926, 36927],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([36917, 36918, 36919,  ..., 49238, 49239, 49240], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2607)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([49241, 49242, 49243, 49244, 49245, 49246, 49247, 49248, 49249, 49250],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([49241, 49242, 49243,  ..., 61516, 61517, 61518], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2635)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([61519, 61520, 61521, 61522, 61523, 61524, 61525, 61526, 61527, 61528],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([61519, 61520, 61521,  ..., 73799, 73800, 73801], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2665)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([73802, 73803, 73805, 73806, 73807, 73808, 73809, 73810, 73811, 73812],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([73802, 73803, 73805,  ..., 86078, 86080, 86081], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2601)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([86082, 86083, 86084, 86085, 86086, 86087, 86088, 86089, 86090, 86091],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([86082, 86083, 86084,  ..., 98369, 98370, 98371], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2613)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([98372, 98373, 98374, 98375, 98376, 98377, 98378, 98379, 98380, 98381],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([ 98372,  98373,  98374,  ..., 110657, 110658, 110659], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2605)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([110660, 110661, 110662, 110663, 110664, 110665, 110666, 110667, 110668,
        110669], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([110660, 110661, 110662,  ..., 122928, 122929, 122930], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2600)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([122931, 122932, 122933, 122934, 122935, 122936, 122937, 122938, 122939,
        122940], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([122931, 122932, 122933,  ..., 135174, 135175, 135176], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2597)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([135177, 135178, 135179, 135180, 135181, 135182, 135183, 135184, 135185,
        135186], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([135177, 135178, 135179,  ..., 147444, 147445, 147446], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2589)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([147447, 147448, 147449, 147450, 147451, 147452, 147453, 147454, 147455,
        147456], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([147447, 147448, 147449,  ..., 159732, 159733, 159734], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2626)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([159735, 159736, 159737, 159738, 159739, 159740, 159741, 159742, 159743,
        159744], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([159735, 159736, 159737,  ..., 172013, 172015, 172016], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1509499549865723  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2603)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([172017, 172018, 172019, 172020, 172021, 172022, 172023, 172024, 172025,
        172026], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3566007614135742  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([172017, 172018, 172019,  ..., 184306, 184307, 184308], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150604248046875  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2590)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569464683532715  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([184309, 184310, 184311, 184312, 184313, 184314, 184315, 184316, 184317,
        184318], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3569459915161133  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([184309, 184310, 184311,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12024
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1501450538635254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12024 ratio: 0.06116873801323695 bucket_loss : tensor(0.2631)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3565974235534668  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.1837)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3565974235534668  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes


 Run 0| Epoch 8 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563699722290039  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 12275, 12276, 12277], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1503734588623047  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2574)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35718297958374023  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([12278, 12279, 12280, 12281, 12282, 12283, 12284, 12285, 12286, 12287],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.35718297958374023  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([12278, 12279, 12280,  ..., 24567, 24568, 24569], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.151186466217041  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2542)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3571648597717285  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([24570, 24571, 24572, 24573, 24574, 24575, 24576, 24577, 24578, 24579],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3571648597717285  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([24570, 24571, 24572,  ..., 36833, 36834, 36835], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1511683464050293  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2583)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([36836, 36837, 36838, 36839, 36840, 36841, 36842, 36843, 36844, 36845],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([36836, 36837, 36838,  ..., 49116, 49117, 49118], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506519317626953  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2583)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([49119, 49120, 49121, 49122, 49123, 49124, 49125, 49126, 49127, 49128],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([49119, 49120, 49121,  ..., 61405, 61406, 61407], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150376319885254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2589)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([61408, 61409, 61411, 61412, 61413, 61414, 61415, 61416, 61417, 61418],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([61408, 61409, 61411,  ..., 73679, 73680, 73681], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506519317626953  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2574)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([73682, 73683, 73684, 73685, 73686, 73687, 73688, 73689, 73690, 73691],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([73682, 73683, 73684,  ..., 85955, 85956, 85957], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150376319885254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2558)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([85958, 85959, 85960, 85961, 85962, 85963, 85964, 85965, 85966, 85967],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([85958, 85959, 85960,  ..., 98238, 98239, 98240], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506519317626953  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2589)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([98241, 98242, 98243, 98244, 98245, 98246, 98247, 98248, 98249, 98250],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([ 98241,  98242,  98243,  ..., 110544, 110545, 110546], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150376319885254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2582)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([110547, 110548, 110549, 110550, 110551, 110552, 110553, 110554, 110555,
        110556], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([110547, 110548, 110549,  ..., 122817, 122818, 122819], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506519317626953  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2585)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([122820, 122821, 122822, 122823, 122824, 122825, 122826, 122827, 122828,
        122829], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([122820, 122821, 122822,  ..., 135095, 135096, 135097], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150376319885254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2560)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([135098, 135099, 135100, 135101, 135102, 135103, 135104, 135105, 135106,
        135107], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([135098, 135099, 135100,  ..., 147394, 147395, 147396], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506519317626953  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2558)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([147397, 147398, 147399, 147400, 147401, 147402, 147403, 147404, 147405,
        147406], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([147397, 147398, 147399,  ..., 159679, 159680, 159681], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150376319885254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2556)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([159682, 159683, 159684, 159685, 159686, 159687, 159688, 159689, 159690,
        159691], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([159682, 159683, 159684,  ..., 171993, 171994, 171995], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1506519317626953  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2551)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([171996, 171997, 171998, 172000, 172001, 172002, 172003, 172004, 172005,
        172006], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([171996, 171997, 171998,  ..., 184272, 184273, 184274], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12039
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.150376319885254  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12039 ratio: 0.06124504631914168 bucket_loss : tensor(0.2582)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563728332519531  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

v3.py : output nodes local nid:  tensor([184275, 184276, 184277, 184278, 184279, 184280, 184281, 184282, 184283,
        184284], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563723564147949  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

core.py bucket local nid tensor([184275, 184276, 184277,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 12024
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 1.1498641967773438  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

degree: tensor(10) # of output: 12024 ratio: 0.06116873801323695 bucket_loss : tensor(0.2578)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563694953918457  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.1145)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.9014892578125 GB
    Memory Allocated: 0.3563694953918457  GigaBytes
Max Memory Allocated: 1.925224781036377  GigaBytes


 Run 0| Epoch 9 |
