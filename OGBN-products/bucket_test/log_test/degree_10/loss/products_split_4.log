main start at this time 1670383733.6328614
-----------------------------------------before load data 
 Nvidia-smi: 0.2530517578125 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

#nodes: 2449029
#edges: 123718024
#classes: 47
success----------------------------------------
196571
39255
2164782
# Nodes: 2400608
# Edges: 123718024
# Train: 196571
# Val: 39255
# Test: 2164782
# Classes: 47

----------------------------------------start of run function 
 Nvidia-smi: 0.2530517578125 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

in feats:  100
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.3663330078125 GB
    Memory Allocated: 0.3191061019897461  GigaBytes
Max Memory Allocated: 0.32019758224487305  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 49174, 49175, 49176], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.1456298828125 GB
    Memory Allocated: 3.221773624420166  GigaBytes
Max Memory Allocated: 4.0080695152282715  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1747)
----------------------------------------- after loss backward 
 Nvidia-smi: 5.1553955078125 GB
    Memory Allocated: 0.3626523017883301  GigaBytes
Max Memory Allocated: 4.0080695152282715  GigaBytes

v3.py : output nodes local nid:  tensor([49177, 49178, 49179, 49180, 49181, 49182, 49183, 49184, 49185, 49186],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.1553955078125 GB
    Memory Allocated: 0.3626523017883301  GigaBytes
Max Memory Allocated: 4.0080695152282715  GigaBytes

core.py bucket local nid tensor([49177, 49178, 49179,  ..., 98316, 98317, 98318], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.3350830078125 GB
    Memory Allocated: 3.2309021949768066  GigaBytes
Max Memory Allocated: 4.0516157150268555  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1762)
----------------------------------------- after loss backward 
 Nvidia-smi: 5.3350830078125 GB
    Memory Allocated: 0.3626523017883301  GigaBytes
Max Memory Allocated: 4.0516157150268555  GigaBytes

v3.py : output nodes local nid:  tensor([98320, 98321, 98322, 98323, 98324, 98325, 98326, 98327, 98328, 98329],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.3350830078125 GB
    Memory Allocated: 0.3626523017883301  GigaBytes
Max Memory Allocated: 4.0516157150268555  GigaBytes

core.py bucket local nid tensor([ 98320,  98321,  98322,  ..., 147373, 147374, 147375], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.3350830078125 GB
    Memory Allocated: 3.230677604675293  GigaBytes
Max Memory Allocated: 4.0516157150268555  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1706)
----------------------------------------- after loss backward 
 Nvidia-smi: 5.3350830078125 GB
    Memory Allocated: 0.3626523017883301  GigaBytes
Max Memory Allocated: 4.0516157150268555  GigaBytes

v3.py : output nodes local nid:  tensor([147376, 147377, 147378, 147379, 147380, 147381, 147382, 147383, 147384,
        147385], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.3350830078125 GB
    Memory Allocated: 0.3626523017883301  GigaBytes
Max Memory Allocated: 4.0516157150268555  GigaBytes

core.py bucket local nid tensor([147376, 147377, 147378,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48150
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.3350830078125 GB
    Memory Allocated: 3.2308802604675293  GigaBytes
Max Memory Allocated: 4.0516157150268555  GigaBytes

degree: tensor(10) # of output: 48150 ratio: 0.24494966195420484 bucket_loss : tensor(1.1749)
----------------------------------------- after loss backward 
 Nvidia-smi: 5.3350830078125 GB
    Memory Allocated: 0.3626518249511719  GigaBytes
Max Memory Allocated: 4.0516157150268555  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.6964)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.3350830078125 GB
    Memory Allocated: 0.3633270263671875  GigaBytes
Max Memory Allocated: 4.0516157150268555  GigaBytes


 Run 0| Epoch 0 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.3350830078125 GB
    Memory Allocated: 0.36296987533569336  GigaBytes
Max Memory Allocated: 4.0516157150268555  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 49129, 49130, 49131], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 3.23121976852417  GigaBytes
Max Memory Allocated: 4.051933288574219  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1614)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.36297035217285156  GigaBytes
Max Memory Allocated: 4.051933288574219  GigaBytes

v3.py : output nodes local nid:  tensor([49132, 49133, 49134, 49135, 49136, 49137, 49138, 49140, 49141, 49142],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.36297035217285156  GigaBytes
Max Memory Allocated: 4.051933288574219  GigaBytes

core.py bucket local nid tensor([49132, 49133, 49134,  ..., 98293, 98294, 98295], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 3.2309956550598145  GigaBytes
Max Memory Allocated: 4.051933288574219  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1566)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.36297035217285156  GigaBytes
Max Memory Allocated: 4.051933288574219  GigaBytes

v3.py : output nodes local nid:  tensor([98296, 98297, 98298, 98299, 98300, 98301, 98302, 98303, 98304, 98305],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.36297035217285156  GigaBytes
Max Memory Allocated: 4.051933288574219  GigaBytes

core.py bucket local nid tensor([ 98296,  98297,  98298,  ..., 147424, 147425, 147426], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 3.231220245361328  GigaBytes
Max Memory Allocated: 4.051933765411377  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1584)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.36297035217285156  GigaBytes
Max Memory Allocated: 4.051933765411377  GigaBytes

v3.py : output nodes local nid:  tensor([147427, 147428, 147429, 147430, 147431, 147432, 147433, 147434, 147435,
        147436], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.36297035217285156  GigaBytes
Max Memory Allocated: 4.051933765411377  GigaBytes

core.py bucket local nid tensor([147427, 147428, 147429,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48150
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 3.230973720550537  GigaBytes
Max Memory Allocated: 4.051933765411377  GigaBytes

degree: tensor(10) # of output: 48150 ratio: 0.24494966195420484 bucket_loss : tensor(1.1572)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.36296987533569336  GigaBytes
Max Memory Allocated: 4.051933765411377  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.6336)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.36296987533569336  GigaBytes
Max Memory Allocated: 4.051933765411377  GigaBytes


 Run 0| Epoch 1 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.3633270263671875  GigaBytes
Max Memory Allocated: 4.051933765411377  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 49150, 49151, 49152], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 3.2317047119140625  GigaBytes
Max Memory Allocated: 4.052418231964111  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1423)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.052418231964111  GigaBytes

v3.py : output nodes local nid:  tensor([49153, 49154, 49155, 49156, 49157, 49158, 49159, 49160, 49161, 49162],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.052418231964111  GigaBytes

core.py bucket local nid tensor([49153, 49154, 49155,  ..., 98307, 98308, 98309], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 3.2317051887512207  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1438)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

v3.py : output nodes local nid:  tensor([98310, 98311, 98312, 98313, 98314, 98315, 98316, 98317, 98318, 98319],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([ 98310,  98311,  98312,  ..., 147449, 147450, 147451], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 3.231480598449707  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1423)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

v3.py : output nodes local nid:  tensor([147452, 147453, 147454, 147455, 147456, 147457, 147458, 147459, 147460,
        147461], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([147452, 147453, 147454,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48150
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0616455078125 GB
    Memory Allocated: 3.2316842079162598  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48150 ratio: 0.24494966195420484 bucket_loss : tensor(1.1418)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633270263671875  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.5703)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633270263671875  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes


 Run 0| Epoch 2 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3627762794494629  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 49192, 49193, 49194], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.230801582336426  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1235)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3627767562866211  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

v3.py : output nodes local nid:  tensor([49195, 49196, 49197, 49198, 49199, 49200, 49201, 49202, 49203, 49204],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3627767562866211  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([49195, 49196, 49197,  ..., 98304, 98305, 98306], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2310266494750977  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1282)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3627767562866211  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

v3.py : output nodes local nid:  tensor([98307, 98308, 98309, 98310, 98311, 98312, 98313, 98314, 98315, 98316],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3627767562866211  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([ 98307,  98308,  98309,  ..., 147440, 147441, 147442], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2310266494750977  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1220)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3627767562866211  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

v3.py : output nodes local nid:  tensor([147443, 147444, 147445, 147446, 147447, 147448, 147449, 147450, 147451,
        147452], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3627767562866211  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([147443, 147444, 147445,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48150
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2307801246643066  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48150 ratio: 0.24494966195420484 bucket_loss : tensor(1.1342)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3627767562866211  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.5078)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3627767562866211  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes


 Run 0| Epoch 3 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 49119, 49120, 49121], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2315773963928223  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1095)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

v3.py : output nodes local nid:  tensor([49122, 49123, 49124, 49125, 49126, 49127, 49128, 49129, 49130, 49131],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([49122, 49123, 49124,  ..., 98294, 98295, 98296], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2313528060913086  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1145)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

v3.py : output nodes local nid:  tensor([98297, 98298, 98299, 98300, 98301, 98302, 98303, 98304, 98305, 98306],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([ 98297,  98298,  98299,  ..., 147440, 147441, 147442], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2315773963928223  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.1073)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

v3.py : output nodes local nid:  tensor([147443, 147444, 147445, 147446, 147447, 147448, 147449, 147450, 147451,
        147452], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([147443, 147444, 147445,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48150
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.231555461883545  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48150 ratio: 0.24494966195420484 bucket_loss : tensor(1.1133)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.4446)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes


 Run 0| Epoch 4 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.36293792724609375  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 49146, 49147, 49148], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2309632301330566  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0982)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.36293792724609375  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

v3.py : output nodes local nid:  tensor([49149, 49150, 49151, 49152, 49153, 49154, 49155, 49156, 49157, 49158],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.36293792724609375  GigaBytes
Max Memory Allocated: 4.0524187088012695  GigaBytes

core.py bucket local nid tensor([49149, 49150, 49151,  ..., 98293, 98294, 98295], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2311878204345703  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0951)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.36293792724609375  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([98296, 98297, 98298, 98299, 98300, 98301, 98302, 98303, 98305, 98306],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.36293792724609375  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([ 98296,  98297,  98298,  ..., 147410, 147411, 147412], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2309632301330566  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0937)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.36293792724609375  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([147413, 147414, 147415, 147416, 147417, 147418, 147419, 147420, 147421,
        147422], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.36293792724609375  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([147413, 147414, 147415,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48150
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.231165885925293  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48150 ratio: 0.24494966195420484 bucket_loss : tensor(1.0940)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.36293745040893555  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.3810)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.36293745040893555  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes


 Run 0| Epoch 5 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 49104, 49105, 49106], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2315773963928223  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0783)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([49107, 49108, 49109, 49110, 49111, 49112, 49113, 49114, 49115, 49116],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([49107, 49108, 49109,  ..., 98233, 98234, 98235], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.231353282928467  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0765)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([98236, 98238, 98239, 98240, 98241, 98242, 98243, 98244, 98245, 98246],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([ 98236,  98238,  98239,  ..., 147456, 147457, 147458], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2315778732299805  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0812)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([147459, 147460, 147461, 147462, 147463, 147464, 147465, 147466, 147467,
        147468], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([147459, 147460, 147461,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48150
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2313313484191895  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48150 ratio: 0.24494966195420484 bucket_loss : tensor(1.0805)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.3164)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes


 Run 0| Epoch 6 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3625340461730957  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 49088, 49089, 49090], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2307839393615723  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0625)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3625345230102539  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([49091, 49092, 49093, 49094, 49095, 49096, 49097, 49098, 49099, 49100],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3625345230102539  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([49091, 49092, 49093,  ..., 98256, 98257, 98258], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2307844161987305  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0614)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3625345230102539  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([98259, 98260, 98261, 98262, 98263, 98264, 98265, 98266, 98267, 98268],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3625345230102539  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([ 98259,  98260,  98261,  ..., 147412, 147413, 147414], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.230559825897217  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0611)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3625345230102539  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([147415, 147416, 147417, 147418, 147419, 147420, 147421, 147422, 147423,
        147424], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3625345230102539  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([147415, 147416, 147417,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48150
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.230762481689453  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48150 ratio: 0.24494966195420484 bucket_loss : tensor(1.0655)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3625340461730957  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.2505)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3625340461730957  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes


 Run 0| Epoch 7 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 49235, 49236, 49237], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2313528060913086  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0481)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([49238, 49239, 49240, 49241, 49242, 49243, 49244, 49245, 49246, 49247],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([49238, 49239, 49240,  ..., 98363, 98364, 98365], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2315778732299805  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0514)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([98366, 98367, 98368, 98369, 98370, 98371, 98372, 98373, 98374, 98375],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([ 98366,  98367,  98368,  ..., 147435, 147436, 147437], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2315778732299805  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0389)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([147438, 147439, 147440, 147441, 147442, 147443, 147444, 147445, 147446,
        147447], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633279800415039  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([147438, 147439, 147440,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48150
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2313313484191895  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48150 ratio: 0.24494966195420484 bucket_loss : tensor(1.0452)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.1837)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3633275032043457  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes


 Run 0| Epoch 8 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3630990982055664  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 49113, 49114, 49115], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.231348991394043  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0281)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3630995750427246  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([49116, 49117, 49118, 49119, 49120, 49121, 49122, 49123, 49124, 49125],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3630995750427246  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([49116, 49117, 49118,  ..., 98232, 98233, 98234], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.2311248779296875  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0309)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3630995750427246  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([98235, 98236, 98237, 98238, 98239, 98240, 98241, 98242, 98243, 98244],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3630995750427246  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([ 98235,  98236,  98237,  ..., 147385, 147386, 147387], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48153
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.231349468231201  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

degree: tensor(10) # of output: 48153 ratio: 0.2449649236153858 bucket_loss : tensor(1.0286)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3630995750427246  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

v3.py : output nodes local nid:  tensor([147388, 147389, 147390, 147391, 147392, 147393, 147394, 147395, 147396,
        147397], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3630995750427246  GigaBytes
Max Memory Allocated: 4.052806377410889  GigaBytes

core.py bucket local nid tensor([147388, 147389, 147390,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 48150
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 3.231327533721924  GigaBytes
Max Memory Allocated: 4.052945137023926  GigaBytes

degree: tensor(10) # of output: 48150 ratio: 0.24494966195420484 bucket_loss : tensor(1.0269)
----------------------------------------- after loss backward 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3630990982055664  GigaBytes
Max Memory Allocated: 4.052945137023926  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.1145)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 6.0635986328125 GB
    Memory Allocated: 0.3630990982055664  GigaBytes
Max Memory Allocated: 4.052945137023926  GigaBytes


 Run 0| Epoch 9 |
