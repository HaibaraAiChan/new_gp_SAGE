main start at this time 1670383998.7763407
-----------------------------------------before load data 
 Nvidia-smi: 0.2530517578125 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

#nodes: 2449029
#edges: 123718024
#classes: 47
success----------------------------------------
196571
39255
2164782
# Nodes: 2400608
# Edges: 123718024
# Train: 196571
# Val: 39255
# Test: 2164782
# Classes: 47

----------------------------------------start of run function 
 Nvidia-smi: 0.2530517578125 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

in feats:  100
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.3663330078125 GB
    Memory Allocated: 0.3190164566040039  GigaBytes
Max Memory Allocated: 0.3199286460876465  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 24592, 24593, 24594], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.7510986328125 GB
    Memory Allocated: 1.833740234375  GigaBytes
Max Memory Allocated: 2.57783842086792  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5859)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.7589111328125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.57783842086792  GigaBytes

v3.py : output nodes local nid:  tensor([24595, 24596, 24597, 24598, 24599, 24600, 24601, 24602, 24603, 24604],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.7589111328125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.57783842086792  GigaBytes

core.py bucket local nid tensor([24595, 24596, 24597,  ..., 49175, 49176, 49177], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 1.8384737968444824  GigaBytes
Max Memory Allocated: 2.6169896125793457  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5888)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.6169896125793457  GigaBytes

v3.py : output nodes local nid:  tensor([49178, 49179, 49180, 49181, 49182, 49183, 49184, 49185, 49186, 49187],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.6169896125793457  GigaBytes

core.py bucket local nid tensor([49178, 49179, 49180,  ..., 73732, 73733, 73734], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 1.8384737968444824  GigaBytes
Max Memory Allocated: 2.6169896125793457  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5899)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.6169896125793457  GigaBytes

v3.py : output nodes local nid:  tensor([73735, 73736, 73737, 73738, 73739, 73740, 73741, 73742, 73743, 73744],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.6169896125793457  GigaBytes

core.py bucket local nid tensor([73735, 73736, 73737,  ..., 98318, 98320, 98321], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 1.8384737968444824  GigaBytes
Max Memory Allocated: 2.6169896125793457  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5863)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.6169896125793457  GigaBytes

v3.py : output nodes local nid:  tensor([98322, 98323, 98324, 98325, 98326, 98327, 98328, 98329, 98330, 98331],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.6169896125793457  GigaBytes

core.py bucket local nid tensor([ 98322,  98323,  98324,  ..., 122855, 122856, 122857], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 1.8386006355285645  GigaBytes
Max Memory Allocated: 2.6171164512634277  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5872)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.35834550857543945  GigaBytes
Max Memory Allocated: 2.6171164512634277  GigaBytes

v3.py : output nodes local nid:  tensor([122858, 122859, 122860, 122861, 122862, 122863, 122864, 122865, 122866,
        122867], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.35834550857543945  GigaBytes
Max Memory Allocated: 2.6171164512634277  GigaBytes

core.py bucket local nid tensor([122858, 122859, 122860,  ..., 147376, 147377, 147378], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 1.839158535003662  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5836)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

v3.py : output nodes local nid:  tensor([147379, 147380, 147381, 147382, 147383, 147384, 147385, 147386, 147387,
        147388], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([147379, 147380, 147381,  ..., 171970, 171971, 171972], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 1.8384737968444824  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5871)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

v3.py : output nodes local nid:  tensor([171973, 171974, 171975, 171976, 171977, 171978, 171979, 171980, 171981,
        171982], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581676483154297  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([171973, 171974, 171975,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24070
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 1.8380932807922363  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24070 ratio: 0.12244939487513418 bucket_loss : tensor(0.5876)
----------------------------------------- after loss backward 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3581666946411133  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.6964)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.3588418960571289  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes


 Run 0| Epoch 0 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.8507080078125 GB
    Memory Allocated: 0.35848474502563477  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 24545, 24546, 24547], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8387908935546875  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5803)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35866355895996094  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

v3.py : output nodes local nid:  tensor([24548, 24549, 24550, 24551, 24552, 24553, 24554, 24555, 24556, 24557],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35866355895996094  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([24548, 24549, 24550,  ..., 49130, 49131, 49132], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8389697074890137  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5811)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35848569869995117  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

v3.py : output nodes local nid:  tensor([49133, 49134, 49135, 49136, 49137, 49138, 49140, 49141, 49142, 49143],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35848569869995117  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([49133, 49134, 49135,  ..., 73725, 73726, 73727], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838791847229004  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5781)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35848569869995117  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

v3.py : output nodes local nid:  tensor([73728, 73729, 73730, 73731, 73732, 73733, 73734, 73735, 73736, 73737],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35848569869995117  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([73728, 73729, 73730,  ..., 98295, 98296, 98297], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838791847229004  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5785)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35866260528564453  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

v3.py : output nodes local nid:  tensor([98298, 98299, 98300, 98301, 98302, 98303, 98304, 98305, 98306, 98307],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35866260528564453  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([ 98298,  98299,  98300,  ..., 122842, 122843, 122844], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8389687538146973  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5822)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35848569869995117  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

v3.py : output nodes local nid:  tensor([122845, 122846, 122847, 122848, 122849, 122850, 122851, 122852, 122853,
        122854], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35848569869995117  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([122845, 122846, 122847,  ..., 147427, 147428, 147429], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838791847229004  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5763)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35866260528564453  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

v3.py : output nodes local nid:  tensor([147430, 147431, 147432, 147433, 147434, 147435, 147436, 147437, 147438,
        147439], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35866260528564453  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([147430, 147431, 147432,  ..., 171988, 171989, 171990], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8389687538146973  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5799)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35848569869995117  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

v3.py : output nodes local nid:  tensor([171991, 171992, 171993, 171994, 171995, 171996, 171997, 171998, 171999,
        172000], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35848569869995117  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([171991, 171992, 171993,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24070
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8384113311767578  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

degree: tensor(10) # of output: 24070 ratio: 0.12244939487513418 bucket_loss : tensor(0.5772)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35866260528564453  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.6336)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35866260528564453  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes


 Run 0| Epoch 1 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35901975631713867  GigaBytes
Max Memory Allocated: 2.6176743507385254  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 24570, 24571, 24572], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8393259048461914  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5720)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

v3.py : output nodes local nid:  tensor([24573, 24574, 24575, 24577, 24578, 24579, 24580, 24581, 24582, 24583],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

core.py bucket local nid tensor([24573, 24574, 24575,  ..., 49151, 49152, 49153], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5703)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

v3.py : output nodes local nid:  tensor([49154, 49155, 49156, 49157, 49158, 49159, 49160, 49161, 49162, 49163],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

core.py bucket local nid tensor([49154, 49155, 49156,  ..., 73687, 73688, 73689], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5687)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

v3.py : output nodes local nid:  tensor([73690, 73691, 73692, 73693, 73694, 73695, 73696, 73697, 73698, 73699],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

core.py bucket local nid tensor([73690, 73691, 73692,  ..., 98309, 98310, 98311], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5751)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

v3.py : output nodes local nid:  tensor([98312, 98313, 98314, 98315, 98316, 98317, 98318, 98319, 98320, 98321],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

core.py bucket local nid tensor([ 98312,  98313,  98314,  ..., 122902, 122903, 122904], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5707)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

v3.py : output nodes local nid:  tensor([122905, 122906, 122907, 122908, 122909, 122910, 122911, 122912, 122913,
        122914], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

core.py bucket local nid tensor([122905, 122906, 122907,  ..., 147452, 147453, 147454], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5716)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

v3.py : output nodes local nid:  tensor([147455, 147456, 147457, 147458, 147459, 147460, 147461, 147462, 147463,
        147464], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

core.py bucket local nid tensor([147455, 147456, 147457,  ..., 171996, 171997, 171998], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5710)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

v3.py : output nodes local nid:  tensor([171999, 172000, 172001, 172002, 172003, 172004, 172005, 172006, 172007,
        172008], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

core.py bucket local nid tensor([171999, 172000, 172001,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24070
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838768482208252  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

degree: tensor(10) # of output: 24070 ratio: 0.12244939487513418 bucket_loss : tensor(0.5708)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588418960571289  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.5703)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588418960571289  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes


 Run 0| Epoch 2 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582911491394043  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 24584, 24585, 24586], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838597297668457  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5620)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588376045227051  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

v3.py : output nodes local nid:  tensor([24587, 24588, 24589, 24590, 24591, 24592, 24593, 24594, 24595, 24596],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588376045227051  GigaBytes
Max Memory Allocated: 2.6178417205810547  GigaBytes

core.py bucket local nid tensor([24587, 24588, 24589,  ..., 49193, 49194, 49195], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8391437530517578  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5615)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([49196, 49197, 49198, 49199, 49200, 49201, 49202, 49203, 49204, 49205],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([49196, 49197, 49198,  ..., 73764, 73765, 73766], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8385982513427734  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5639)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([73767, 73768, 73769, 73770, 73771, 73772, 73773, 73774, 73775, 73776],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([73767, 73768, 73769,  ..., 98306, 98307, 98308], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8385982513427734  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5643)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([98309, 98310, 98311, 98312, 98313, 98314, 98315, 98316, 98317, 98318],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([ 98309,  98310,  98311,  ..., 122900, 122901, 122902], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8385982513427734  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5599)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([122903, 122904, 122905, 122906, 122907, 122908, 122909, 122910, 122911,
        122912], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([122903, 122904, 122905,  ..., 147443, 147444, 147445], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8385982513427734  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5621)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([147446, 147447, 147448, 147449, 147450, 147451, 147452, 147453, 147454,
        147455], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([147446, 147447, 147448,  ..., 172016, 172017, 172018], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8385982513427734  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5651)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([172019, 172020, 172021, 172022, 172023, 172024, 172025, 172026, 172027,
        172028], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582921028137207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([172019, 172020, 172021,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24070
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8382177352905273  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24070 ratio: 0.12244939487513418 bucket_loss : tensor(0.5690)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582949638366699  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.5078)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3582949638366699  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes


 Run 0| Epoch 3 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35884571075439453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 24572, 24573, 24574], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8391518592834473  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5533)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35950803756713867  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([24575, 24576, 24577, 24578, 24579, 24580, 24581, 24582, 24583, 24584],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35950803756713867  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([24575, 24576, 24577,  ..., 49120, 49121, 49122], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8398141860961914  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5562)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([49123, 49124, 49125, 49126, 49127, 49128, 49129, 49130, 49131, 49132],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([49123, 49124, 49125,  ..., 73684, 73685, 73686], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5558)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35950803756713867  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([73687, 73688, 73689, 73690, 73691, 73692, 73693, 73694, 73695, 73696],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35950803756713867  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([73687, 73688, 73689,  ..., 98296, 98297, 98298], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8398141860961914  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5588)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([98299, 98300, 98301, 98302, 98303, 98304, 98305, 98306, 98307, 98308],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([ 98299,  98300,  98301,  ..., 122873, 122874, 122875], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839707851409912  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5524)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([122876, 122877, 122878, 122879, 122880, 122881, 122882, 122883, 122884,
        122885], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([122876, 122877, 122878,  ..., 147443, 147444, 147445], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5548)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35950803756713867  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([147446, 147447, 147448, 147449, 147450, 147451, 147452, 147453, 147454,
        147455], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35950803756713867  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([147446, 147447, 147448,  ..., 171987, 171989, 171990], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8398141860961914  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5600)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([171991, 171992, 171993, 171994, 171995, 171996, 171997, 171998, 171999,
        172000], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([171991, 171992, 171993,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24070
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8387713432312012  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24070 ratio: 0.12244939487513418 bucket_loss : tensor(0.5533)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35884571075439453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.4446)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35884571075439453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes


 Run 0| Epoch 4 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3584561347961426  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 24528, 24529, 24530], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8387622833251953  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5505)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35845327377319336  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([24531, 24532, 24533, 24534, 24535, 24536, 24537, 24538, 24539, 24540],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35845327377319336  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([24531, 24532, 24533,  ..., 49147, 49148, 49149], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838759422302246  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5477)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35845327377319336  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([49150, 49151, 49152, 49153, 49154, 49155, 49156, 49157, 49158, 49159],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35845327377319336  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([49150, 49151, 49152,  ..., 73737, 73738, 73739], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838759422302246  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5459)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35857295989990234  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([73740, 73741, 73742, 73743, 73744, 73745, 73746, 73747, 73748, 73749],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35857295989990234  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([73740, 73741, 73742,  ..., 98295, 98296, 98297], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838879108428955  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5492)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35845327377319336  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([98298, 98299, 98300, 98301, 98302, 98303, 98305, 98306, 98307, 98308],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35845327377319336  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([ 98298,  98299,  98300,  ..., 122867, 122868, 122869], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838759422302246  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5459)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586311340332031  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([122870, 122871, 122872, 122873, 122874, 122875, 122876, 122877, 122878,
        122879], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586311340332031  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([122870, 122871, 122872,  ..., 147413, 147414, 147415], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8389372825622559  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5478)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35857295989990234  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([147416, 147417, 147418, 147419, 147420, 147421, 147422, 147424, 147425,
        147426], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35857295989990234  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([147416, 147417, 147418,  ..., 171954, 171955, 171956], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838879108428955  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5478)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35845327377319336  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([171957, 171958, 171959, 171960, 171961, 171963, 171964, 171965, 171966,
        171967], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35845327377319336  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([171957, 171958, 171959,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24070
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.83837890625  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24070 ratio: 0.12244939487513418 bucket_loss : tensor(0.5462)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35857295989990234  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.3810)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35857295989990234  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes


 Run 0| Epoch 5 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3589625358581543  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 24547, 24548, 24549], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839268684387207  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5377)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

v3.py : output nodes local nid:  tensor([24550, 24551, 24552, 24553, 24555, 24556, 24557, 24558, 24559, 24560],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.6184000968933105  GigaBytes

core.py bucket local nid tensor([24550, 24551, 24552,  ..., 49105, 49106, 49107], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5407)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([49108, 49109, 49110, 49111, 49112, 49113, 49114, 49115, 49116, 49117],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([49108, 49109, 49110,  ..., 73664, 73665, 73666], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5381)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([73667, 73668, 73669, 73670, 73671, 73672, 73673, 73674, 73675, 73676],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([73667, 73668, 73669,  ..., 98235, 98236, 98238], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5384)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([98239, 98240, 98241, 98242, 98243, 98244, 98245, 98246, 98247, 98248],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([ 98239,  98240,  98241,  ..., 122842, 122843, 122844], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5421)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3590207099914551  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([122845, 122846, 122847, 122848, 122849, 122850, 122851, 122852, 122853,
        122854], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3590207099914551  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([122845, 122846, 122847,  ..., 147459, 147460, 147461], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8393268585205078  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5391)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([147462, 147463, 147464, 147465, 147466, 147467, 147468, 147469, 147470,
        147471], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([147462, 147463, 147464,  ..., 172046, 172047, 172048], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5394)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([172049, 172050, 172051, 172052, 172053, 172055, 172056, 172057, 172058,
        172059], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([172049, 172050, 172051,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24070
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838768482208252  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24070 ratio: 0.12244939487513418 bucket_loss : tensor(0.5409)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588418960571289  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.3164)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588418960571289  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes


 Run 0| Epoch 6 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585352897644043  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 24570, 24571, 24572], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838841438293457  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5318)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35871410369873047  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([24573, 24574, 24575, 24576, 24577, 24578, 24579, 24580, 24581, 24582],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35871410369873047  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([24573, 24574, 24575,  ..., 49089, 49090, 49091], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839400291442871  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5307)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585362434387207  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([49092, 49093, 49094, 49095, 49096, 49097, 49098, 49099, 49100, 49101],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585362434387207  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([49092, 49093, 49094,  ..., 73656, 73657, 73658], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8388423919677734  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5351)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585362434387207  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([73659, 73660, 73661, 73662, 73663, 73664, 73665, 73666, 73667, 73668],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585362434387207  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([73659, 73660, 73661,  ..., 98258, 98259, 98260], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8388423919677734  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5264)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585362434387207  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([98261, 98262, 98263, 98264, 98265, 98266, 98267, 98268, 98269, 98270],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585362434387207  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([ 98261,  98262,  98263,  ..., 122868, 122869, 122870], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8388423919677734  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5303)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35871410369873047  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([122871, 122872, 122873, 122874, 122875, 122876, 122877, 122878, 122879,
        122880], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35871410369873047  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([122871, 122872, 122873,  ..., 147415, 147416, 147417], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839400291442871  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5308)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585362434387207  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([147418, 147419, 147420, 147421, 147422, 147423, 147424, 147425, 147426,
        147427], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585362434387207  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([147418, 147419, 147420,  ..., 171993, 171994, 171995], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8388423919677734  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5295)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585362434387207  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([171996, 171997, 171998, 171999, 172000, 172001, 172002, 172003, 172004,
        172005], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585362434387207  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([171996, 171997, 171998,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24070
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8384618759155273  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24070 ratio: 0.12244939487513418 bucket_loss : tensor(0.5360)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585352897644043  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.2505)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3585352897644043  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes


 Run 0| Epoch 7 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588418960571289  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 24591, 24592, 24593], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8391480445861816  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5261)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3590207099914551  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([24594, 24595, 24596, 24597, 24598, 24599, 24600, 24601, 24602, 24603],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3590207099914551  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([24594, 24595, 24596,  ..., 49236, 49237, 49238], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8393268585205078  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5221)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([49239, 49240, 49241, 49242, 49243, 49244, 49245, 49246, 49247, 49248],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([49239, 49240, 49241,  ..., 73796, 73797, 73798], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5300)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([73799, 73800, 73801, 73802, 73803, 73805, 73806, 73807, 73808, 73809],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([73799, 73800, 73801,  ..., 98365, 98366, 98367], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5214)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35901975631713867  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([98368, 98369, 98370, 98371, 98372, 98373, 98374, 98375, 98376, 98377],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35901975631713867  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([ 98368,  98369,  98370,  ..., 122923, 122924, 122925], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8393259048461914  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5205)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([122926, 122927, 122928, 122929, 122930, 122931, 122932, 122933, 122934,
        122935], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([122926, 122927, 122928,  ..., 147438, 147439, 147440], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.839148998260498  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5185)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35901975631713867  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([147441, 147442, 147443, 147444, 147445, 147446, 147447, 147448, 147449,
        147450], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35901975631713867  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([147441, 147442, 147443,  ..., 172005, 172007, 172008], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8393259048461914  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5229)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([172009, 172010, 172011, 172012, 172013, 172015, 172016, 172017, 172018,
        172019], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3588428497314453  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([172009, 172010, 172011,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24070
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838768482208252  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24070 ratio: 0.12244939487513418 bucket_loss : tensor(0.5223)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35901975631713867  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.1837)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.35901975631713867  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes


 Run 0| Epoch 8 |
{1: 173, 2: 221, 3: 374, 4: 456, 5: 445, 6: 550, 7: 655, 8: 512, 9: 576, 10: 192609}
v3.py : output nodes local nid:  tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3587918281555176  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([    0,     1,     2,  ..., 24566, 24567, 24568], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8390979766845703  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5116)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([24569, 24570, 24571, 24572, 24573, 24574, 24575, 24576, 24577, 24578],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([24569, 24570, 24571,  ..., 49114, 49115, 49116], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838921070098877  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5166)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([49117, 49118, 49119, 49120, 49121, 49122, 49123, 49124, 49125, 49126],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([49117, 49118, 49119,  ..., 73676, 73677, 73678], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838921070098877  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5163)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([73679, 73680, 73681, 73682, 73683, 73684, 73685, 73686, 73687, 73688],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([73679, 73680, 73681,  ..., 98234, 98235, 98236], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838921070098877  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5146)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([98237, 98238, 98239, 98240, 98241, 98242, 98243, 98244, 98245, 98246],
       device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([ 98237,  98238,  98239,  ..., 122812, 122813, 122814], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838921070098877  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5168)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([122815, 122816, 122817, 122818, 122819, 122820, 122821, 122822, 122823,
        122824], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([122815, 122816, 122817,  ..., 147388, 147389, 147390], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838921070098877  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5118)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([147391, 147392, 147393, 147394, 147395, 147396, 147397, 147398, 147399,
        147400], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([147391, 147392, 147393,  ..., 171986, 171987, 171988], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24077
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.838921070098877  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24077 ratio: 0.12248500541788972 bucket_loss : tensor(0.5107)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

v3.py : output nodes local nid:  tensor([171989, 171990, 171991, 171992, 171993, 171994, 171995, 171996, 171997,
        171998], device='cuda:0', dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586149215698242  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

core.py bucket local nid tensor([171989, 171990, 171991,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 24070
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 1.8385405540466309  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

degree: tensor(10) # of output: 24070 ratio: 0.12244939487513418 bucket_loss : tensor(0.5162)
----------------------------------------- after loss backward 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586139678955078  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(4.1145)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 4.5772705078125 GB
    Memory Allocated: 0.3586139678955078  GigaBytes
Max Memory Allocated: 2.618696689605713  GigaBytes


 Run 0| Epoch 9 |
