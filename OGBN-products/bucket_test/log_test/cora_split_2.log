main start at this time 1670380446.3285856
-----------------------------------------before load data 
 Nvidia-smi: 0.2530517578125 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

  NumNodes: 2708
  NumEdges: 10556
  NumFeats: 1433
  NumClasses: 7
  NumTrainingSamples: 140
  NumValidationSamples: 500
  NumTestSamples: 1000
Done loading data from cached files.
success----------------------------------------
140
500
2068
# Nodes: 2708
# Edges: 10556
# Train: 140
# Val: 500
# Test: 2068
# Classes: 7

----------------------------------------start of run function 
 Nvidia-smi: 0.2530517578125 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

in feats:  1433
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 10}
v3.py : output nodes local nid:  tensor([  3,  11,  52,  74,  85,  90, 113, 114, 120, 129], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.0792236328125 GB
    Memory Allocated: 0.0657491683959961  GigaBytes
Max Memory Allocated: 0.0657505989074707  GigaBytes

core.py bucket local nid tensor([  3,  11,  52,  74,  85,  90, 113, 114, 120, 129], device='cuda:0')
the length of bkt_idx in core.py _bucketing 10
core.py : node_bkt local nid:  tensor([  3,  11,  52,  74,  85,  90, 113, 114, 120, 129], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.1456298828125 GB
    Memory Allocated: 0.0746760368347168  GigaBytes
Max Memory Allocated: 0.0784907341003418  GigaBytes

degree: tensor(10) # of output: 10 ratio: 0.07142857142857142 bucket_loss : tensor(0.1399)
----------------------------------------- after loss backward 
 Nvidia-smi: 1.2784423828125 GB
    Memory Allocated: 0.1283726692199707  GigaBytes
Max Memory Allocated: 0.19776248931884766  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(0.1399)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 1.4346923828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.34735918045043945  GigaBytes


 Run 0| Epoch 0 |
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 10}
v3.py : output nodes local nid:  tensor([ 29,  55,  65,  70,  72,  92, 107, 115, 128, 135], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4346923828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.34735918045043945  GigaBytes

core.py bucket local nid tensor([ 29,  55,  65,  70,  72,  92, 107, 115, 128, 135], device='cuda:0')
the length of bkt_idx in core.py _bucketing 10
core.py : node_bkt local nid:  tensor([ 29,  55,  65,  70,  72,  92, 107, 115, 128, 135], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4346923828125 GB
    Memory Allocated: 0.26253223419189453  GigaBytes
Max Memory Allocated: 0.34735918045043945  GigaBytes

degree: tensor(10) # of output: 10 ratio: 0.07142857142857142 bucket_loss : tensor(0.1275)
----------------------------------------- after loss backward 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.3855419158935547  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(0.1275)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.3855419158935547  GigaBytes


 Run 0| Epoch 1 |
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 10}
v3.py : output nodes local nid:  tensor([  3,  16,  28,  32,  42,  44,  93,  94, 102, 117], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536196708679199  GigaBytes
Max Memory Allocated: 0.3855419158935547  GigaBytes

core.py bucket local nid tensor([  3,  16,  28,  32,  42,  44,  93,  94, 102, 117], device='cuda:0')
the length of bkt_idx in core.py _bucketing 10
core.py : node_bkt local nid:  tensor([  3,  16,  28,  32,  42,  44,  93,  94, 102, 117], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.262542724609375  GigaBytes
Max Memory Allocated: 0.3855419158935547  GigaBytes

degree: tensor(10) # of output: 10 ratio: 0.07142857142857142 bucket_loss : tensor(0.1140)
----------------------------------------- after loss backward 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536196708679199  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(0.1140)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536196708679199  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes


 Run 0| Epoch 2 |
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 10}
v3.py : output nodes local nid:  tensor([  3,   8,  14,  15,  35,  60,  91, 102, 117, 127], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes

core.py bucket local nid tensor([  3,   8,  14,  15,  35,  60,  91, 102, 117, 127], device='cuda:0')
the length of bkt_idx in core.py _bucketing 10
core.py : node_bkt local nid:  tensor([  3,   8,  14,  15,  35,  60,  91, 102, 117, 127], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.26253223419189453  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes

degree: tensor(10) # of output: 10 ratio: 0.07142857142857142 bucket_loss : tensor(0.1403)
----------------------------------------- after loss backward 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(0.1403)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes


 Run 0| Epoch 3 |
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 10}
v3.py : output nodes local nid:  tensor([ 16,  17,  26,  37,  52,  67,  72,  88,  92, 106], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes

core.py bucket local nid tensor([ 16,  17,  26,  37,  52,  67,  72,  88,  92, 106], device='cuda:0')
the length of bkt_idx in core.py _bucketing 10
core.py : node_bkt local nid:  tensor([ 16,  17,  26,  37,  52,  67,  72,  88,  92, 106], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.26253223419189453  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes

degree: tensor(10) # of output: 10 ratio: 0.07142857142857142 bucket_loss : tensor(0.1059)
----------------------------------------- after loss backward 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(0.1059)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes


 Run 0| Epoch 4 |
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 10}
v3.py : output nodes local nid:  tensor([ 13,  21,  43,  54,  61,  84, 102, 111, 120, 139], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536306381225586  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes

core.py bucket local nid tensor([ 13,  21,  43,  54,  61,  84, 102, 111, 120, 139], device='cuda:0')
the length of bkt_idx in core.py _bucketing 10
core.py : node_bkt local nid:  tensor([ 13,  21,  43,  54,  61,  84, 102, 111, 120, 139], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.26255369186401367  GigaBytes
Max Memory Allocated: 0.38555240631103516  GigaBytes

degree: tensor(10) # of output: 10 ratio: 0.07142857142857142 bucket_loss : tensor(0.1133)
----------------------------------------- after loss backward 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536306381225586  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(0.1133)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536306381225586  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes


 Run 0| Epoch 5 |
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 10}
v3.py : output nodes local nid:  tensor([  6,  50,  52,  54,  71,  83, 102, 114, 118, 124], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

core.py bucket local nid tensor([  6,  50,  52,  54,  71,  83, 102, 114, 118, 124], device='cuda:0')
the length of bkt_idx in core.py _bucketing 10
core.py : node_bkt local nid:  tensor([  6,  50,  52,  54,  71,  83, 102, 114, 118, 124], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.26253223419189453  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

degree: tensor(10) # of output: 10 ratio: 0.07142857142857142 bucket_loss : tensor(0.1166)
----------------------------------------- after loss backward 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(0.1166)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25360918045043945  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes


 Run 0| Epoch 6 |
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 10}
v3.py : output nodes local nid:  tensor([ 35,  42,  74,  92, 100, 105, 121, 123, 125, 132], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536196708679199  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

core.py bucket local nid tensor([ 35,  42,  74,  92, 100, 105, 121, 123, 125, 132], device='cuda:0')
the length of bkt_idx in core.py _bucketing 10
core.py : node_bkt local nid:  tensor([ 35,  42,  74,  92, 100, 105, 121, 123, 125, 132], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.262542724609375  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

degree: tensor(10) # of output: 10 ratio: 0.07142857142857142 bucket_loss : tensor(0.1165)
----------------------------------------- after loss backward 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536196708679199  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(0.1165)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536196708679199  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes


 Run 0| Epoch 7 |
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 10}
v3.py : output nodes local nid:  tensor([  3,  13,  28,  42,  54,  69,  74,  77, 100, 137], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25362539291381836  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

core.py bucket local nid tensor([  3,  13,  28,  42,  54,  69,  74,  77, 100, 137], device='cuda:0')
the length of bkt_idx in core.py _bucketing 10
core.py : node_bkt local nid:  tensor([  3,  13,  28,  42,  54,  69,  74,  77, 100, 137], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.26254844665527344  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

degree: tensor(10) # of output: 10 ratio: 0.07142857142857142 bucket_loss : tensor(0.1153)
----------------------------------------- after loss backward 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25362539291381836  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(0.1153)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.25362539291381836  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes


 Run 0| Epoch 8 |
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 10}
v3.py : output nodes local nid:  tensor([ 11,  22,  31,  32,  41,  50,  61,  77, 110, 134], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536196708679199  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

core.py bucket local nid tensor([ 11,  22,  31,  32,  41,  50,  61,  77, 110, 134], device='cuda:0')
the length of bkt_idx in core.py _bucketing 10
core.py : node_bkt local nid:  tensor([ 11,  22,  31,  32,  41,  50,  61,  77, 110, 134], device='cuda:0',
       dtype=torch.int32)
----------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.262542724609375  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

degree: tensor(10) # of output: 10 ratio: 0.07142857142857142 bucket_loss : tensor(0.1133)
----------------------------------------- after loss backward 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536196708679199  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes

-------------------------------------------------------loss_sum  :  tensor(0.1133)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 1.4659423828125 GB
    Memory Allocated: 0.2536196708679199  GigaBytes
Max Memory Allocated: 0.38556337356567383  GigaBytes


 Run 0| Epoch 9 |
