main start at this time 1671171447.850878
-----------------------------------------before load data 
 Nvidia-smi: 2.3907470703125 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

#nodes: 2449029
#edges: 123718024
#classes: 47
success----------------------------------------
196571
39255
2164782
# Nodes: 2400608
# Edges: 123718024
# Train: 196571
# Val: 39255
# Test: 2164782
# Classes: 47

----------------------------------------start of run function 
 Nvidia-smi: 2.3907470703125 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

in feats:  100
----------------------------------------- after full batch dataloader loading 
 Nvidia-smi: 3.1094970703125 GB
    Memory Allocated: 0.0003376007080078125  GigaBytes
Max Memory Allocated: 0.0003376007080078125  GigaBytes

----------------------------------------- after block subtensor loading 
 Nvidia-smi: 3.4454345703125 GB
    Memory Allocated: 0.3182086944580078  GigaBytes
Max Memory Allocated: 0.3182086944580078  GigaBytes

----------------------------------------- after schedule preparing 
 Nvidia-smi: 3.4454345703125 GB
    Memory Allocated: 0.3182086944580078  GigaBytes
Max Memory Allocated: 0.3182086944580078  GigaBytes

----------------------------------------- after block to device loading 
 Nvidia-smi: 3.5020751953125 GB
    Memory Allocated: 0.3182086944580078  GigaBytes
Max Memory Allocated: 0.3182086944580078  GigaBytes

----------------------------------------- before degree grouping 
 Nvidia-smi: 3.5020751953125 GB
    Memory Allocated: 0.3182086944580078  GigaBytes
Max Memory Allocated: 0.3182086944580078  GigaBytes

------------------------------------ before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 3.5509033203125 GB
    Memory Allocated: 0.3196907043457031  GigaBytes
Max Memory Allocated: 0.3197035789489746  GigaBytes

------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5645751953125 GB
    Memory Allocated: 0.5944876670837402  GigaBytes
Max Memory Allocated: 1.3277521133422852  GigaBytes

degree: tensor([1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=torch.int32) # of output: 3962 ratio: 0.02015556719963779 bucket_loss : tensor(0.0948)
------------------------------------- after loss backward 
 Nvidia-smi: 4.5743408203125 GB
    Memory Allocated: 0.35516977310180664  GigaBytes
Max Memory Allocated: 1.3277521133422852  GigaBytes

----------------------------------------- after degree grouping 
 Nvidia-smi: 4.5743408203125 GB
    Memory Allocated: 0.3200111389160156  GigaBytes
Max Memory Allocated: 1.3277521133422852  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.5743408203125 GB
    Memory Allocated: 0.3207516670227051  GigaBytes
Max Memory Allocated: 1.3277521133422852  GigaBytes

core.py bucket local nid tensor([   0,    1,    2,  ..., 6129, 6130, 6131], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.9610595703125 GB
    Memory Allocated: 0.8064174652099609  GigaBytes
Max Memory Allocated: 1.5419206619262695  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1461)
------------------------------------ after loss backward 
 Nvidia-smi: 4.9610595703125 GB
    Memory Allocated: 0.35680341720581055  GigaBytes
Max Memory Allocated: 1.5419206619262695  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 4.9610595703125 GB
    Memory Allocated: 0.35680341720581055  GigaBytes
Max Memory Allocated: 1.5419206619262695  GigaBytes

core.py bucket local nid tensor([ 6132,  6133,  6134,  ..., 12274, 12275, 12276], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8078436851501465  GigaBytes
Max Memory Allocated: 1.5777645111083984  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1452)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35680341720581055  GigaBytes
Max Memory Allocated: 1.5777645111083984  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35680341720581055  GigaBytes
Max Memory Allocated: 1.5777645111083984  GigaBytes

core.py bucket local nid tensor([12277, 12278, 12279,  ..., 18448, 18449, 18450], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8093090057373047  GigaBytes
Max Memory Allocated: 1.5794382095336914  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1463)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5794382095336914  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5794382095336914  GigaBytes

core.py bucket local nid tensor([18451, 18452, 18453,  ..., 24595, 24596, 24597], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1484)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([24598, 24599, 24600,  ..., 30745, 30746, 30747], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1462)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([30748, 30749, 30750,  ..., 36883, 36884, 36885], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1467)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([36886, 36887, 36888,  ..., 43033, 43034, 43035], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1492)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([43036, 43037, 43038,  ..., 49181, 49182, 49183], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1468)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([49184, 49185, 49186,  ..., 55315, 55316, 55317], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1524)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([55318, 55319, 55320,  ..., 61459, 61460, 61461], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1444)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([61462, 61463, 61464,  ..., 67595, 67596, 67597], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1483)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([67598, 67599, 67600,  ..., 73741, 73742, 73743], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1449)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([73744, 73745, 73746,  ..., 79904, 79905, 79906], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1470)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([79907, 79908, 79909,  ..., 86045, 86046, 86047], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1446)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([86048, 86050, 86051,  ..., 92187, 92188, 92189], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1473)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([92190, 92191, 92192,  ..., 98331, 98332, 98333], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1474)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([ 98334,  98335,  98336,  ..., 104466, 104467, 104468], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1480)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([104469, 104470, 104471,  ..., 110595, 110596, 110597], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1478)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([110598, 110599, 110600,  ..., 116737, 116738, 116739], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1457)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([116740, 116741, 116742,  ..., 122870, 122871, 122872], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1459)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([122873, 122874, 122875,  ..., 128991, 128992, 128993], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1458)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([128994, 128995, 128996,  ..., 135126, 135127, 135128], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1452)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([135129, 135130, 135131,  ..., 141251, 141252, 141253], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1466)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([141254, 141255, 141256,  ..., 147394, 147395, 147396], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1461)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([147397, 147398, 147399,  ..., 153540, 153541, 153542], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1451)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([153544, 153545, 153546,  ..., 159679, 159680, 159681], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1470)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([159682, 159683, 159684,  ..., 165831, 165832, 165833], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1477)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([165834, 165835, 165836,  ..., 171991, 171992, 171993], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1473)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([171994, 171995, 171996,  ..., 178151, 178153, 178154], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1476)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([178155, 178156, 178157,  ..., 184301, 184302, 184303], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094286918640137  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1464)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([184304, 184305, 184306,  ..., 190449, 190450, 190451], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8094263076782227  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1476)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35665035247802734  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.35664987564086914  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([190452, 190453, 190454,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 5989
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.8079190254211426  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 5989 ratio: 0.030467362937564545 bucket_loss : tensor(0.1456)
------------------------------------ after loss backward 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.3563404083251953  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------------- after degree split 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.3200111389160156  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

-------------------------------------------------------------------------------loss_sum  :  tensor(4.7912)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes


 Run 0| Epoch 0 |
----------------------------------------- after full batch dataloader loading 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------------- after block subtensor loading 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.6382002830505371  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------------- after schedule preparing 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.6382002830505371  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------------- after block to device loading 
 Nvidia-smi: 5.0665283203125 GB
    Memory Allocated: 0.6382002830505371  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------------- before degree grouping 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.3188643455505371  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

------------------------------------ before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.0352783203125 GB
    Memory Allocated: 0.3203463554382324  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7618408203125 GB
    Memory Allocated: 0.5953783988952637  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor([1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=torch.int32) # of output: 3962 ratio: 0.02015556719963779 bucket_loss : tensor(0.0937)
------------------------------------- after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3554878234863281  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------------- after degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3203291893005371  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32106971740722656  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([   0,    1,    2,  ..., 6142, 6143, 6144], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8071846961975098  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1477)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([ 6145,  6146,  6147,  ..., 12288, 12289, 12290], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094406127929688  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1440)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5795578956604004  GigaBytes

core.py bucket local nid tensor([12291, 12292, 12293,  ..., 18418, 18419, 18420], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1433)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([18421, 18422, 18423,  ..., 24548, 24549, 24550], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1454)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([24551, 24552, 24553,  ..., 30692, 30693, 30694], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1451)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([30695, 30697, 30698,  ..., 36851, 36852, 36853], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1449)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([36854, 36855, 36856,  ..., 43000, 43001, 43002], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1462)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([43003, 43004, 43005,  ..., 49136, 49137, 49138], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1449)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([49140, 49141, 49142,  ..., 55295, 55296, 55297], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1445)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([55298, 55299, 55300,  ..., 61438, 61439, 61440], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1434)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([61441, 61442, 61443,  ..., 67586, 67587, 67588], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1450)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([67589, 67590, 67591,  ..., 73734, 73735, 73736], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1453)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([73737, 73738, 73739,  ..., 79873, 79874, 79875], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1439)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([79876, 79877, 79878,  ..., 86012, 86013, 86014], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1441)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([86015, 86016, 86017,  ..., 92158, 92159, 92160], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1472)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([92161, 92162, 92163,  ..., 98307, 98308, 98309], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1432)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([ 98310,  98311,  98312,  ..., 104463, 104464, 104465], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1450)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([104466, 104467, 104468,  ..., 110591, 110592, 110593], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1462)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([110594, 110595, 110596,  ..., 116721, 116722, 116723], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1442)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([116724, 116725, 116726,  ..., 122857, 122858, 122859], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1467)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([122860, 122861, 122862,  ..., 129008, 129009, 129010], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1460)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([129011, 129012, 129013,  ..., 135143, 135144, 135145], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1432)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([135146, 135147, 135148,  ..., 141294, 141295, 141296], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1436)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([141297, 141298, 141299,  ..., 147445, 147446, 147447], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1437)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([147448, 147449, 147450,  ..., 153585, 153586, 153587], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1450)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([153588, 153589, 153590,  ..., 159741, 159742, 159743], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1445)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([159744, 159745, 159746,  ..., 165882, 165883, 165884], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1446)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([165885, 165886, 165887,  ..., 172009, 172010, 172011], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1457)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([172012, 172013, 172014,  ..., 178166, 178167, 178168], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1459)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([178169, 178170, 178171,  ..., 184329, 184330, 184331], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809685230255127  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1417)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569979667663574  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([184332, 184333, 184334,  ..., 190467, 190468, 190469], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097467422485352  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1446)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35696840286254883  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569679260253906  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([190470, 190471, 190472,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 5989
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8085470199584961  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 5989 ratio: 0.030467362937564545 bucket_loss : tensor(0.1445)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3566584587097168  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------------- after degree split 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3203291893005371  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

-------------------------------------------------------------------------------loss_sum  :  tensor(4.7273)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3203291893005371  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes


 Run 0| Epoch 1 |
----------------------------------------- after full batch dataloader loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3203291893005371  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------------- after block subtensor loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6382002830505371  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------------- after schedule preparing 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6382002830505371  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------------- after block to device loading 
 Nvidia-smi: 5.7950439453125 GB
    Memory Allocated: 0.6382002830505371  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------------- before degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31922149658203125  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

------------------------------------ before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32070350646972656  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.5955004692077637  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor([1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=torch.int32) # of output: 3962 ratio: 0.02015556719963779 bucket_loss : tensor(0.0926)
------------------------------------- after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35584497451782227  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------------- after degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3214268684387207  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([   0,    1,    2,  ..., 6137, 6138, 6139], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.806884765625  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1416)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35747861862182617  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35747861862182617  GigaBytes
Max Memory Allocated: 1.5798759460449219  GigaBytes

core.py bucket local nid tensor([ 6140,  6141,  6142,  ..., 12300, 12301, 12302], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8099842071533203  GigaBytes
Max Memory Allocated: 1.580113410949707  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1445)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580113410949707  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580113410949707  GigaBytes

core.py bucket local nid tensor([12303, 12304, 12305,  ..., 18432, 18433, 18434], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1427)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([18435, 18436, 18437,  ..., 24573, 24574, 24575], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1434)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([24577, 24578, 24579,  ..., 30721, 30722, 30723], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1435)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([30724, 30725, 30726,  ..., 36873, 36874, 36875], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1424)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([36876, 36877, 36878,  ..., 43019, 43020, 43021], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1416)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([43022, 43023, 43024,  ..., 49157, 49158, 49159], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1429)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([49160, 49161, 49162,  ..., 55284, 55285, 55286], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1420)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([55287, 55288, 55289,  ..., 61421, 61422, 61423], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1414)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([61424, 61425, 61426,  ..., 67558, 67559, 67560], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1432)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([67561, 67562, 67563,  ..., 73696, 73697, 73698], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1422)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([73699, 73700, 73701,  ..., 79865, 79866, 79867], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1427)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([79868, 79869, 79870,  ..., 86009, 86010, 86011], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1482)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([86012, 86013, 86014,  ..., 92149, 92150, 92151], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1429)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([92152, 92153, 92154,  ..., 98321, 98322, 98323], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1414)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 98325,  98326,  98327,  ..., 104465, 104466, 104467], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1441)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([104468, 104469, 104471,  ..., 110599, 110600, 110601], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1424)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([110602, 110603, 110604,  ..., 116761, 116762, 116763], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1422)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([116764, 116765, 116766,  ..., 122917, 122918, 122919], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1421)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([122920, 122921, 122922,  ..., 129046, 129047, 129048], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1451)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([129049, 129050, 129051,  ..., 135193, 135194, 135195], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1421)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([135196, 135197, 135198,  ..., 141327, 141328, 141329], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1429)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([141330, 141331, 141332,  ..., 147470, 147471, 147472], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1417)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([147473, 147474, 147475,  ..., 153611, 153612, 153613], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1417)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([153614, 153615, 153616,  ..., 159739, 159740, 159741], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1422)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([159742, 159743, 159744,  ..., 165887, 165888, 165889], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1412)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([165890, 165891, 165892,  ..., 172017, 172018, 172019], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1459)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([172020, 172021, 172022,  ..., 178169, 178170, 178171], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1429)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([178172, 178173, 178174,  ..., 184325, 184326, 184327], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1441)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([184328, 184329, 184330,  ..., 190463, 190464, 190465], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1424)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732507705688477  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([190466, 190467, 190468,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 5989
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8089632987976074  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 5989 ratio: 0.030467362937564545 bucket_loss : tensor(0.1409)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35701560974121094  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree split 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

-------------------------------------------------------------------------------loss_sum  :  tensor(4.6630)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes


 Run 0| Epoch 2 |
----------------------------------------- after full batch dataloader loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block subtensor loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6380066871643066  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after schedule preparing 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6380066871643066  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block to device loading 
 Nvidia-smi: 5.7950439453125 GB
    Memory Allocated: 0.6380066871643066  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- before degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31867074966430664  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------ before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32015275955200195  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.5951848030090332  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor([1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=torch.int32) # of output: 3962 ratio: 0.02015556719963779 bucket_loss : tensor(0.0915)
------------------------------------- after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35529422760009766  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32013559341430664  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3208761215209961  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([   0,    1,    2,  ..., 6143, 6144, 6145], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8069911003112793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1408)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 6146,  6147,  6148,  ..., 12288, 12289, 12290], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092470169067383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1394)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([12291, 12292, 12293,  ..., 18434, 18435, 18436], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1398)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([18437, 18438, 18439,  ..., 24587, 24588, 24589], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1421)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([24590, 24591, 24592,  ..., 30723, 30724, 30725], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1399)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([30726, 30727, 30728,  ..., 36886, 36887, 36888], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1414)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([36889, 36890, 36891,  ..., 43058, 43059, 43060], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1412)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([43061, 43062, 43063,  ..., 49199, 49200, 49201], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1391)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([49202, 49203, 49204,  ..., 55327, 55328, 55329], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1411)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([55330, 55331, 55332,  ..., 61468, 61471, 61472], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1413)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([61473, 61474, 61475,  ..., 67622, 67623, 67625], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1412)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([67626, 67628, 67629,  ..., 73773, 73774, 73775], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1404)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([73776, 73777, 73778,  ..., 79921, 79922, 79923], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1407)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([79924, 79925, 79926,  ..., 86055, 86056, 86057], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1415)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([86058, 86059, 86060,  ..., 92187, 92188, 92189], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1390)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([92190, 92191, 92192,  ..., 98318, 98319, 98320], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1432)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 98322,  98323,  98324,  ..., 104479, 104480, 104481], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1412)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([104482, 104483, 104484,  ..., 110626, 110627, 110628], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1391)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([110629, 110630, 110631,  ..., 116772, 116773, 116774], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1402)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([116775, 116776, 116777,  ..., 122915, 122916, 122917], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1395)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([122918, 122919, 122920,  ..., 129079, 129080, 129081], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1403)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([129082, 129083, 129084,  ..., 135223, 135224, 135225], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1394)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([135226, 135227, 135228,  ..., 141346, 141347, 141348], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1412)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([141349, 141350, 141351,  ..., 147461, 147462, 147463], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1413)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([147464, 147465, 147467,  ..., 153590, 153591, 153592], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1407)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([153593, 153594, 153595,  ..., 159741, 159742, 159743], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1398)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([159744, 159745, 159747,  ..., 165886, 165887, 165888], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1434)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([165889, 165890, 165891,  ..., 172037, 172038, 172039], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1413)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([172040, 172041, 172042,  ..., 178183, 178184, 178185], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1430)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([178186, 178188, 178189,  ..., 184313, 184314, 184315], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094916343688965  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1441)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35680437088012695  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([184316, 184317, 184318,  ..., 190478, 190479, 190480], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095531463623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1418)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677480697631836  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35677433013916016  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([190481, 190482, 190483,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 5989
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8083534240722656  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 5989 ratio: 0.030467362937564545 bucket_loss : tensor(0.1397)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35646486282348633  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree split 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32013559341430664  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

-------------------------------------------------------------------------------loss_sum  :  tensor(4.5995)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32013559341430664  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes


 Run 0| Epoch 3 |
----------------------------------------- after full batch dataloader loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32013559341430664  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block subtensor loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6380066871643066  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after schedule preparing 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6380066871643066  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block to device loading 
 Nvidia-smi: 5.7950439453125 GB
    Memory Allocated: 0.6380066871643066  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- before degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31922149658203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------ before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32070350646972656  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.5955004692077637  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor([1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=torch.int32) # of output: 3962 ratio: 0.02015556719963779 bucket_loss : tensor(0.0904)
------------------------------------- after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35584497451782227  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3214268684387207  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([   0,    1,    2,  ..., 6129, 6130, 6131], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.806884765625  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1385)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35747861862182617  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35747861862182617  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 6132,  6133,  6134,  ..., 12285, 12286, 12287], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8099842071533203  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1394)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([12288, 12289, 12290,  ..., 18429, 18430, 18431], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1376)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([18432, 18433, 18434,  ..., 24575, 24576, 24577], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1380)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([24578, 24579, 24580,  ..., 30718, 30719, 30720], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1388)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([30721, 30722, 30724,  ..., 36855, 36856, 36857], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1402)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([36858, 36859, 36860,  ..., 42993, 42994, 42995], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1376)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([42996, 42997, 42998,  ..., 49126, 49127, 49128], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1396)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([49129, 49130, 49131,  ..., 55262, 55263, 55264], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1378)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([55265, 55266, 55267,  ..., 61398, 61399, 61400], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1383)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([61401, 61402, 61403,  ..., 67546, 67547, 67548], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1398)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([67549, 67550, 67551,  ..., 73693, 73694, 73695], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1401)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([73696, 73697, 73698,  ..., 79841, 79842, 79843], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1437)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([79844, 79845, 79846,  ..., 86020, 86021, 86022], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1388)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([86023, 86024, 86025,  ..., 92164, 92165, 92166], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1377)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([92167, 92168, 92169,  ..., 98308, 98309, 98310], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1386)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 98311,  98312,  98313,  ..., 104447, 104448, 104449], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1378)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([104450, 104451, 104452,  ..., 110581, 110582, 110583], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1374)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([110584, 110585, 110586,  ..., 116736, 116737, 116738], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1390)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([116739, 116740, 116741,  ..., 122888, 122889, 122890], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1384)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([122891, 122892, 122893,  ..., 129046, 129047, 129048], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1390)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([129049, 129050, 129051,  ..., 135188, 135189, 135190], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1374)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([135192, 135193, 135194,  ..., 141330, 141331, 141333], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1401)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([141334, 141335, 141336,  ..., 147461, 147462, 147463], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1383)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([147464, 147465, 147466,  ..., 153590, 153591, 153592], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1395)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([153593, 153594, 153595,  ..., 159735, 159736, 159737], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1383)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([159738, 159739, 159740,  ..., 165872, 165873, 165874], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1433)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([165875, 165876, 165877,  ..., 172009, 172010, 172011], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1390)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([172012, 172013, 172014,  ..., 178157, 178158, 178159], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1380)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([178160, 178161, 178162,  ..., 184310, 184311, 184312], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1379)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([184313, 184314, 184315,  ..., 190452, 190453, 190454], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1380)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732507705688477  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([190455, 190456, 190457,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 5989
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8089632987976074  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 5989 ratio: 0.030467362937564545 bucket_loss : tensor(0.1389)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35701560974121094  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree split 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

-------------------------------------------------------------------------------loss_sum  :  tensor(4.5352)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes


 Run 0| Epoch 4 |
----------------------------------------- after full batch dataloader loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block subtensor loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6381678581237793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after schedule preparing 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6381678581237793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block to device loading 
 Nvidia-smi: 5.7950439453125 GB
    Memory Allocated: 0.6381678581237793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- before degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3188319206237793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------ before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3203139305114746  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.5953459739685059  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor([1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=torch.int32) # of output: 3962 ratio: 0.02015556719963779 bucket_loss : tensor(0.0893)
------------------------------------- after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3554553985595703  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3202967643737793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32103729248046875  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([   0,    1,    2,  ..., 6122, 6123, 6124], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.807152271270752  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1387)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 6125,  6126,  6127,  ..., 12263, 12264, 12265], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8094081878662109  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1364)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([12266, 12267, 12268,  ..., 18402, 18403, 18404], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1372)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([18405, 18406, 18407,  ..., 24531, 24532, 24533], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1383)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([24534, 24535, 24536,  ..., 30678, 30679, 30680], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1361)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([30681, 30682, 30683,  ..., 36855, 36856, 36857], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1366)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([36858, 36859, 36860,  ..., 43004, 43005, 43006], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1368)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([43007, 43008, 43009,  ..., 49153, 49154, 49155], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1383)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([49156, 49157, 49158,  ..., 55301, 55302, 55303], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1388)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([55304, 55305, 55306,  ..., 61431, 61432, 61433], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1360)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([61434, 61435, 61436,  ..., 67583, 67584, 67585], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1353)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([67586, 67587, 67588,  ..., 73746, 73747, 73748], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1359)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([73749, 73750, 73751,  ..., 79880, 79881, 79882], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1387)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([79883, 79884, 79886,  ..., 86021, 86022, 86024], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1366)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([86025, 86026, 86027,  ..., 92159, 92160, 92161], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1355)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([92162, 92163, 92164,  ..., 98308, 98309, 98310], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1385)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 98312,  98313,  98315,  ..., 104455, 104456, 104457], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1354)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([104458, 104459, 104460,  ..., 110609, 110610, 110611], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1357)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([110612, 110613, 110614,  ..., 116750, 116751, 116752], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1381)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([116753, 116754, 116755,  ..., 122882, 122883, 122884], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1367)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([122885, 122886, 122887,  ..., 129012, 129013, 129014], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1380)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([129015, 129016, 129017,  ..., 135156, 135157, 135158], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1370)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([135159, 135160, 135161,  ..., 141286, 141288, 141289], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1359)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([141290, 141291, 141292,  ..., 147432, 147433, 147434], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1371)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([147435, 147436, 147437,  ..., 153558, 153559, 153560], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1380)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([153561, 153562, 153563,  ..., 159714, 159715, 159716], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1376)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([159717, 159718, 159719,  ..., 165835, 165837, 165838], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1353)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([165839, 165840, 165841,  ..., 171976, 171977, 171978], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1370)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([171979, 171980, 171981,  ..., 178114, 178115, 178116], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1377)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([178117, 178118, 178120,  ..., 184270, 184271, 184272], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8096528053283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1346)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569655418395996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([184273, 184274, 184275,  ..., 190447, 190448, 190449], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8097143173217773  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1377)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356935977935791  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3569355010986328  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([190450, 190451, 190452,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 5989
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8085145950317383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 5989 ratio: 0.030467362937564545 bucket_loss : tensor(0.1358)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.356626033782959  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree split 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3202967643737793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

-------------------------------------------------------------------------------loss_sum  :  tensor(4.4706)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3202967643737793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes


 Run 0| Epoch 5 |
----------------------------------------- after full batch dataloader loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3202967643737793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block subtensor loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6381678581237793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after schedule preparing 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6381678581237793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block to device loading 
 Nvidia-smi: 5.7950439453125 GB
    Memory Allocated: 0.6381678581237793  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- before degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31922149658203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------ before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32070350646972656  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.5955004692077637  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor([1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=torch.int32) # of output: 3962 ratio: 0.02015556719963779 bucket_loss : tensor(0.0882)
------------------------------------- after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35584497451782227  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3214268684387207  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([   0,    1,    2,  ..., 6129, 6130, 6131], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.806884765625  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1340)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35747861862182617  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35747861862182617  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 6132,  6133,  6134,  ..., 12261, 12262, 12263], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8099842071533203  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1363)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([12264, 12265, 12266,  ..., 18402, 18403, 18404], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1343)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([18405, 18406, 18407,  ..., 24550, 24551, 24552], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1333)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([24553, 24555, 24556,  ..., 30684, 30685, 30686], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1358)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([30687, 30688, 30689,  ..., 36828, 36829, 36830], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1354)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([36831, 36832, 36833,  ..., 42975, 42976, 42977], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1345)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([42978, 42979, 42980,  ..., 49111, 49112, 49113], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1351)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([49114, 49115, 49116,  ..., 55253, 55254, 55255], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1351)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([55256, 55257, 55258,  ..., 61377, 61378, 61379], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1345)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([61380, 61381, 61382,  ..., 67521, 67522, 67523], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1343)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([67524, 67525, 67526,  ..., 73673, 73674, 73675], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1343)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([73676, 73677, 73678,  ..., 79819, 79820, 79821], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1336)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([79822, 79823, 79824,  ..., 85962, 85963, 85964], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1351)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([85965, 85966, 85967,  ..., 92101, 92102, 92103], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1348)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([92104, 92105, 92106,  ..., 98248, 98249, 98250], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1349)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 98251,  98252,  98253,  ..., 104416, 104417, 104418], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1344)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([104419, 104420, 104421,  ..., 110569, 110570, 110571], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1352)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([110572, 110573, 110574,  ..., 116717, 116718, 116719], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1370)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([116720, 116721, 116722,  ..., 122857, 122858, 122859], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1356)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([122860, 122861, 122862,  ..., 129024, 129025, 129026], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1353)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([129027, 129028, 129029,  ..., 135169, 135170, 135171], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1349)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([135172, 135173, 135174,  ..., 141319, 141320, 141321], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1352)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([141322, 141323, 141324,  ..., 147477, 147478, 147479], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1339)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([147480, 147481, 147482,  ..., 153626, 153627, 153628], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1369)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([153629, 153630, 153631,  ..., 159762, 159763, 159764], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1362)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([159765, 159766, 159767,  ..., 165907, 165909, 165910], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1340)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([165911, 165912, 165913,  ..., 172068, 172069, 172070], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1324)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([172071, 172072, 172073,  ..., 178193, 178194, 178195], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1371)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([178196, 178197, 178198,  ..., 184336, 184337, 184339], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1335)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([184340, 184341, 184342,  ..., 190474, 190475, 190476], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1362)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732507705688477  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([190477, 190478, 190479,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 5989
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8089632987976074  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 5989 ratio: 0.030467362937564545 bucket_loss : tensor(0.1337)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35701560974121094  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree split 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

-------------------------------------------------------------------------------loss_sum  :  tensor(4.4050)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes


 Run 0| Epoch 6 |
----------------------------------------- after full batch dataloader loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block subtensor loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6377644538879395  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after schedule preparing 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6377644538879395  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block to device loading 
 Nvidia-smi: 5.7950439453125 GB
    Memory Allocated: 0.6377644538879395  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- before degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31842851638793945  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------ before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31991052627563477  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.594942569732666  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor([1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=torch.int32) # of output: 3962 ratio: 0.02015556719963779 bucket_loss : tensor(0.0871)
------------------------------------- after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35505199432373047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31989336013793945  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3206338882446289  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([   0,    1,    2,  ..., 6140, 6141, 6142], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8067488670349121  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1334)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 6143,  6144,  6145,  ..., 12274, 12275, 12276], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8090047836303711  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1328)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([12277, 12278, 12279,  ..., 18428, 18429, 18430], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1335)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([18431, 18432, 18433,  ..., 24573, 24574, 24575], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1322)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([24576, 24577, 24578,  ..., 30679, 30680, 30681], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1321)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([30682, 30683, 30684,  ..., 36807, 36808, 36809], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1330)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([36810, 36811, 36812,  ..., 42945, 42946, 42947], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1335)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([42948, 42949, 42950,  ..., 49095, 49096, 49097], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1323)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([49098, 49099, 49100,  ..., 55239, 55240, 55241], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1329)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([55242, 55243, 55244,  ..., 61376, 61377, 61379], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1353)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([61380, 61381, 61383,  ..., 67538, 67539, 67540], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1335)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([67541, 67542, 67543,  ..., 73665, 73666, 73667], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1335)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([73668, 73669, 73670,  ..., 79807, 79808, 79809], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1319)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([79810, 79811, 79812,  ..., 85967, 85968, 85969], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1314)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([85970, 85971, 85972,  ..., 92124, 92125, 92126], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1328)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([92127, 92128, 92129,  ..., 98270, 98271, 98272], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1305)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 98273,  98274,  98275,  ..., 104432, 104433, 104434], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1313)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([104435, 104436, 104437,  ..., 110583, 110584, 110585], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1333)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([110586, 110587, 110589,  ..., 116733, 116734, 116735], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1317)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([116736, 116737, 116738,  ..., 122883, 122884, 122885], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1340)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([122886, 122887, 122888,  ..., 129021, 129022, 129023], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1329)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([129024, 129025, 129026,  ..., 135172, 135173, 135174], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1337)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([135175, 135176, 135177,  ..., 141314, 141315, 141316], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1310)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([141317, 141318, 141319,  ..., 147433, 147434, 147435], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1334)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([147436, 147437, 147438,  ..., 153586, 153587, 153588], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1323)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([153589, 153590, 153591,  ..., 159735, 159736, 159737], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1336)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([159738, 159739, 159740,  ..., 165869, 165870, 165871], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1318)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([165872, 165873, 165875,  ..., 172014, 172015, 172016], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1321)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([172017, 172018, 172020,  ..., 178157, 178158, 178159], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1321)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([178160, 178161, 178162,  ..., 184295, 184296, 184297], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8092494010925293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1355)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35656213760375977  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([184298, 184299, 184300,  ..., 190455, 190456, 190457], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8093109130859375  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1348)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653257369995117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35653209686279297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([190458, 190459, 190460,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 5989
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8081111907958984  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 5989 ratio: 0.030467362937564545 bucket_loss : tensor(0.1331)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35622262954711914  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree split 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31989336013793945  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

-------------------------------------------------------------------------------loss_sum  :  tensor(4.3380)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31989336013793945  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes


 Run 0| Epoch 7 |
----------------------------------------- after full batch dataloader loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31989336013793945  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block subtensor loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6377644538879395  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after schedule preparing 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6377644538879395  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block to device loading 
 Nvidia-smi: 5.7950439453125 GB
    Memory Allocated: 0.6377644538879395  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- before degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31922149658203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------ before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32070350646972656  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.5955004692077637  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor([1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=torch.int32) # of output: 3962 ratio: 0.02015556719963779 bucket_loss : tensor(0.0859)
------------------------------------- after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35584497451782227  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3214268684387207  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([   0,    1,    2,  ..., 6149, 6150, 6151], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.806884765625  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1308)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35747861862182617  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35747861862182617  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 6152,  6153,  6154,  ..., 12288, 12289, 12290], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8099842071533203  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1319)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([12291, 12292, 12293,  ..., 18444, 18445, 18446], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1314)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([18447, 18448, 18449,  ..., 24594, 24595, 24596], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1322)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([24597, 24598, 24599,  ..., 30755, 30756, 30757], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1298)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([30758, 30759, 30760,  ..., 36917, 36918, 36919], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1317)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([36920, 36921, 36922,  ..., 43083, 43084, 43085], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1304)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([43086, 43087, 43088,  ..., 49242, 49243, 49244], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1304)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([49245, 49246, 49247,  ..., 55395, 55396, 55397], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1322)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([55398, 55399, 55400,  ..., 61521, 61522, 61523], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1313)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([61524, 61525, 61526,  ..., 67674, 67675, 67676], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1334)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([67677, 67678, 67679,  ..., 73806, 73807, 73808], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1331)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([73809, 73810, 73811,  ..., 79953, 79954, 79955], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1293)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([79956, 79957, 79958,  ..., 86086, 86087, 86088], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1309)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([86089, 86090, 86091,  ..., 92221, 92222, 92223], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1306)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([92224, 92225, 92226,  ..., 98377, 98378, 98379], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1307)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 98380,  98381,  98382,  ..., 104507, 104508, 104509], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1312)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([104510, 104511, 104512,  ..., 110666, 110667, 110668], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1294)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([110669, 110670, 110671,  ..., 116806, 116807, 116808], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1300)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([116809, 116810, 116811,  ..., 122938, 122939, 122940], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1301)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([122941, 122942, 122943,  ..., 129068, 129069, 129070], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1303)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([129071, 129072, 129073,  ..., 135185, 135186, 135187], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1294)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([135188, 135189, 135190,  ..., 141327, 141328, 141329], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1295)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([141330, 141331, 141332,  ..., 147456, 147457, 147458], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1294)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([147459, 147460, 147461,  ..., 153591, 153592, 153593], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1322)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([153594, 153595, 153596,  ..., 159745, 159746, 159747], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1304)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([159748, 159749, 159750,  ..., 165880, 165881, 165882], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1308)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([165883, 165884, 165885,  ..., 172029, 172030, 172031], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1297)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([172032, 172033, 172034,  ..., 178184, 178185, 178186], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1292)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([178187, 178188, 178189,  ..., 184321, 184322, 184323], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101015090942383  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1298)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([184324, 184325, 184326,  ..., 190461, 190462, 190463], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8101038932800293  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1327)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732555389404297  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35732507705688477  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([190464, 190465, 190466,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 5989
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8089632987976074  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 5989 ratio: 0.030467362937564545 bucket_loss : tensor(0.1302)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35701560974121094  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree split 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

-------------------------------------------------------------------------------loss_sum  :  tensor(4.2701)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes


 Run 0| Epoch 8 |
----------------------------------------- after full batch dataloader loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32068634033203125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block subtensor loading 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6383295059204102  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after schedule preparing 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.6383295059204102  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after block to device loading 
 Nvidia-smi: 5.7950439453125 GB
    Memory Allocated: 0.6383295059204102  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- before degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.31899356842041016  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------ before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32047557830810547  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

------------------------------------- after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.5955076217651367  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor([1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=torch.int32) # of output: 3962 ratio: 0.02015556719963779 bucket_loss : tensor(0.0848)
------------------------------------- after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35561704635620117  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree grouping 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32045841217041016  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3211989402770996  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([   0,    1,    2,  ..., 6130, 6131, 6132], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8073139190673828  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1293)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 6133,  6134,  6135,  ..., 12276, 12277, 12278], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8095698356628418  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1281)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([12279, 12280, 12281,  ..., 18416, 18417, 18418], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1274)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([18419, 18420, 18422,  ..., 24569, 24570, 24571], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1269)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([24572, 24573, 24574,  ..., 30702, 30703, 30704], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1288)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([30705, 30706, 30707,  ..., 36836, 36837, 36838], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1296)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([36839, 36840, 36841,  ..., 42972, 42973, 42974], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1281)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([42975, 42976, 42977,  ..., 49120, 49121, 49122], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1302)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([49123, 49124, 49125,  ..., 55264, 55265, 55266], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1292)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([55267, 55268, 55269,  ..., 61411, 61412, 61413], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1297)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([61414, 61415, 61416,  ..., 67549, 67550, 67551], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1300)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([67552, 67553, 67554,  ..., 73685, 73686, 73687], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1275)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([73688, 73689, 73690,  ..., 79816, 79817, 79818], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1291)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([79819, 79820, 79821,  ..., 85962, 85963, 85964], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1267)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([85965, 85966, 85967,  ..., 92104, 92105, 92106], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1316)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([92107, 92108, 92109,  ..., 98246, 98247, 98248], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1273)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([ 98249,  98250,  98252,  ..., 104400, 104401, 104402], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1280)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([104403, 104404, 104405,  ..., 110553, 110554, 110555], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1304)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([110556, 110557, 110558,  ..., 116687, 116688, 116689], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1296)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([116690, 116691, 116692,  ..., 122827, 122828, 122829], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1289)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([122830, 122831, 122832,  ..., 128957, 128958, 128959], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1280)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([128960, 128961, 128962,  ..., 135106, 135107, 135108], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1282)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([135109, 135110, 135111,  ..., 141251, 141252, 141253], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1269)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([141254, 141255, 141256,  ..., 147406, 147407, 147408], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1289)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([147409, 147410, 147411,  ..., 153545, 153546, 153547], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1272)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([153548, 153550, 153551,  ..., 159692, 159693, 159694], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1285)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([159695, 159697, 159698,  ..., 165842, 165843, 165844], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1286)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([165845, 165847, 165848,  ..., 172008, 172009, 172010], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1266)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([172011, 172012, 172013,  ..., 178138, 178139, 178140], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1309)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([178141, 178142, 178143,  ..., 184287, 184288, 184289], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.809814453125  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1276)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35712718963623047  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([184290, 184291, 184292,  ..., 190428, 190429, 190430], device='cuda:0')
the length of bkt_idx in core.py _bucketing 6020
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8098759651184082  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 6020 ratio: 0.030625066769767666 bucket_loss : tensor(0.1290)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.3570976257324219  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------- before batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35709714889526367  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

core.py bucket local nid tensor([190431, 190432, 190433,  ..., 196568, 196569, 196570], device='cuda:0')
the length of bkt_idx in core.py _bucketing 5989
------------------------------------after batch_pred = model(blocks, batch_inputs, deg.to(device)) 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.8086762428283691  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

degree: tensor(10) # of output: 5989 ratio: 0.030467362937564545 bucket_loss : tensor(0.1284)
------------------------------------ after loss backward 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.35678768157958984  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

----------------------------------------- after degree split 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32045841217041016  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes

-------------------------------------------------------------------------------loss_sum  :  tensor(4.1999)
----------------------------------------- after optimizer.zero_grad() 
 Nvidia-smi: 5.7637939453125 GB
    Memory Allocated: 0.32045841217041016  GigaBytes
Max Memory Allocated: 1.580233097076416  GigaBytes


 Run 0| Epoch 9 |
