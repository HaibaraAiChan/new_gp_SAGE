main start at this time 1658299042.9548414
-----------------------------------------before load data 
 Nvidia-smi: 0.1717529296875 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

#nodes: 2449029
#edges: 123718024
#classes: 47
success----------------------------------------
196571
39255
2164782
# Nodes: 2400608
# Edges: 123718024
# Train: 196571
# Val: 39255
# Test: 2164782
# Classes: 47

----------------------------------------start of run function 
 Nvidia-smi: 0.1717529296875 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

in feats:  100
----------------------------------------before model to device 
 Nvidia-smi: 0.1717529296875 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

----------------------------------------after model to device
 Nvidia-smi: 1.0174560546875 GB
    Memory Allocated: 7.05718994140625e-05  GigaBytes
Max Memory Allocated: 7.05718994140625e-05  GigaBytes

----------------------------------------before generate dataloader block 
 Nvidia-smi: 1.0174560546875 GB
    Memory Allocated: 7.05718994140625e-05  GigaBytes
Max Memory Allocated: 7.05718994140625e-05  GigaBytes

-----------------------------------------after block dataloader generation 
 Nvidia-smi: 1.0174560546875 GB
    Memory Allocated: 7.05718994140625e-05  GigaBytes
Max Memory Allocated: 7.05718994140625e-05  GigaBytes

connection checking time:  0
block generation total time  0
average batch blocks generation time:  0
block dataloader generation time/epoch 0.6113572120666504
pseudo mini batch 0 input nodes size: 1722455
----------------------------------------before load block subtensor 
 Nvidia-smi: 1.0174560546875 GB
    Memory Allocated: 7.05718994140625e-05  GigaBytes
Max Memory Allocated: 7.05718994140625e-05  GigaBytes

----------------------------------------before batch input features to device
 Nvidia-smi: 1.0174560546875 GB
    Memory Allocated: 7.05718994140625e-05  GigaBytes
Max Memory Allocated: 7.05718994140625e-05  GigaBytes

----------------------------------------after batch input features to device
 Nvidia-smi: 1.6600341796875 GB
    Memory Allocated: 0.6426486968994141  GigaBytes
Max Memory Allocated: 0.6426486968994141  GigaBytes

----------------------------------------after  batch labels to device
 Nvidia-smi: 1.6795654296875 GB
    Memory Allocated: 0.6441135406494141  GigaBytes
Max Memory Allocated: 0.6441135406494141  GigaBytes

----------------------------------------after load block subtensor  
 Nvidia-smi: 1.6795654296875 GB
    Memory Allocated: 0.6441135406494141  GigaBytes
Max Memory Allocated: 0.6441135406494141  GigaBytes

----------------------------------------after blocks to device 
 Nvidia-smi: 1.8299560546875 GB
    Memory Allocated: 0.7408647537231445  GigaBytes
Max Memory Allocated: 0.7408647537231445  GigaBytes

----------------------------------------before batch_pred = model(blocks, batch_inputs) 
 Nvidia-smi: 1.8299560546875 GB
    Memory Allocated: 0.7408647537231445  GigaBytes
Max Memory Allocated: 0.7408647537231445  GigaBytes

first layer input nodes number: 1722455
first layer output nodes number: 1005729
edges number: 9817973
----------------------------------------before model layer 0
 Nvidia-smi: 1.9002685546875 GB
    Memory Allocated: 0.7620301246643066  GigaBytes
Max Memory Allocated: 0.7991394996643066  GigaBytes

torch.Size([1722455, 100])
----------------------------------------before mean aggregator
 Nvidia-smi: 1.9002685546875 GB
    Memory Allocated: 0.7620301246643066  GigaBytes
Max Memory Allocated: 0.7991394996643066  GigaBytes

----------------------------------------graph.srcdata['h'] =  feat_src-------
 Nvidia-smi: 1.9002685546875 GB
    Memory Allocated: 0.7620301246643066  GigaBytes
Max Memory Allocated: 0.7991394996643066  GigaBytes

----------------------------------------graph.update_all(msg_fn, fn.mean('m', 'neigh'))-------
 Nvidia-smi: 3.5194091796875 GB
    Memory Allocated: 1.2149958610534668  GigaBytes
Max Memory Allocated: 1.5945396423339844  GigaBytes

----------------------------------------h_neigh = graph.dstdata['neigh']-------
 Nvidia-smi: 3.5194091796875 GB
    Memory Allocated: 1.2149958610534668  GigaBytes
Max Memory Allocated: 1.5945396423339844  GigaBytes

----------------------------------------after mean aggregator-------h_neigh = self.fc_neigh(h_neigh)-
 Nvidia-smi: 3.5194091796875 GB
    Memory Allocated: 1.4547805786132812  GigaBytes
Max Memory Allocated: 1.5945396423339844  GigaBytes

h_neigh size torch.Size([1005729, 64])
h_self size  torch.Size([1005729, 100])
----------------------------------------before rst
 Nvidia-smi: 3.5194091796875 GB
    Memory Allocated: 1.4547805786132812  GigaBytes
Max Memory Allocated: 1.5945396423339844  GigaBytes

torch.Size([1005729, 64])
----------------------------------------after rst (rst = self.fc_self(h_self) + h_neigh)
 Nvidia-smi: 3.9998779296875 GB
    Memory Allocated: 1.6950149536132812  GigaBytes
Max Memory Allocated: 1.9352493286132812  GigaBytes

----------------------------------------after model layer 0 x = layer(block, x)
 Nvidia-smi: 3.9998779296875 GB
    Memory Allocated: 1.4552302360534668  GigaBytes
Max Memory Allocated: 1.9352493286132812  GigaBytes

torch.Size([1005729, 64])
----------------------------------------after model layer 0 x = self.activation(x)
 Nvidia-smi: 3.9998779296875 GB
    Memory Allocated: 1.6954646110534668  GigaBytes
Max Memory Allocated: 1.9352493286132812  GigaBytes

----------------------------------------after model layer 0 x = self.dropout(x)
 Nvidia-smi: 3.9998779296875 GB
    Memory Allocated: 1.7549614906311035  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

----------------input nodes number: 1005729
----------------output nodes number: 196571
----------------edges number: 2902716
----------------------------------------before mean aggregator
 Nvidia-smi: 3.9998779296875 GB
    Memory Allocated: 1.7639198303222656  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

----------------------------------------graph.srcdata['h'] =  feat_src-------
 Nvidia-smi: 3.9998779296875 GB
    Memory Allocated: 1.7639198303222656  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

----------------------------------------graph.update_all(msg_fn, fn.mean('m', 'neigh'))-------
 Nvidia-smi: 4.0018310546875 GB
    Memory Allocated: 1.833878517150879  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

----------------------------------------h_neigh = graph.dstdata['neigh']-------
 Nvidia-smi: 4.0018310546875 GB
    Memory Allocated: 1.833878517150879  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

----------------------------------------after mean aggregator-------h_neigh = self.fc_neigh(h_neigh)-
 Nvidia-smi: 4.0018310546875 GB
    Memory Allocated: 1.8682961463928223  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

h_neigh size torch.Size([196571, 47])
h_self size  torch.Size([196571, 64])
----------------------------------------before rst
 Nvidia-smi: 4.0018310546875 GB
    Memory Allocated: 1.8682961463928223  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

torch.Size([196571, 47])
----------------------------------------after rst (rst = self.fc_self(h_self) + h_neigh)
 Nvidia-smi: 4.0018310546875 GB
    Memory Allocated: 1.9027137756347656  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

----------------------------------------end of model layers  after x = self.layers[-1](blocks[-1], x)
 Nvidia-smi: 4.0018310546875 GB
    Memory Allocated: 1.8682961463928223  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

torch.Size([196571, 47])
----------------------------------------- after batch_pred = model(blocks, batch_inputs) 
 Nvidia-smi: 4.0018310546875 GB
    Memory Allocated: 1.9027137756347656  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

-----------------------------------------after loss calculation
 Nvidia-smi: 4.0018310546875 GB
    Memory Allocated: 1.9371323585510254  GigaBytes
Max Memory Allocated: 1.9951958656311035  GigaBytes

-----------------------------------------after loss backward
 Nvidia-smi: 4.5155029296875 GB
    Memory Allocated: 0.9319748878479004  GigaBytes
Max Memory Allocated: 2.327361583709717  GigaBytes

-----------------------------------------after optimizer step
 Nvidia-smi: 4.5155029296875 GB
    Memory Allocated: 0.9321160316467285  GigaBytes
Max Memory Allocated: 2.327361583709717  GigaBytes

-----------------------------------------after optimizer zero grad
 Nvidia-smi: 4.5155029296875 GB
    Memory Allocated: 0.9321160316467285  GigaBytes
Max Memory Allocated: 2.327361583709717  GigaBytes

times | data loading | block to device | model prediction | loss calculation | loss backward |  optimizer step |
      |0.3602755069732666 |0.4277472496032715 |0.7997872829437256 |0.000270843505859375 |0.017333507537841797 |0.0028018951416015625 |
----------------------------------------------------------pseudo_mini_loss sum 6.991384983062744
Total (block generation + training)time/epoch 2.2268850803375244
Training time/epoch 1.6150991916656494
Training time without block to device /epoch 1.187351942062378
Training time without total dataloading part /epoch 0.8201935291290283
load block tensor time/epoch 0.3602755069732666
block to device time/epoch 0.4277472496032715
input features size transfer per epoch 1.341104507446289e-07
blocks size to device per epoch 9.685754776000977e-08
 Run 0| Epoch 0 |
Number of nodes for computation during this epoch:  2728184
Number of first layer input nodes during this epoch:  1722455
Number of first layer output nodes during this epoch:  1005729
GraphSAGE(
  (layers): ModuleList(
    (0): SAGEConv(
      (fc_self): Linear(in_features=100, out_features=64, bias=False)
      (fc_neigh): Linear(in_features=100, out_features=64, bias=False)
    )
    (1): SAGEConv(
      (fc_self): Linear(in_features=64, out_features=47, bias=False)
      (fc_neigh): Linear(in_features=64, out_features=47, bias=False)
    )
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
total model parameters size  18816
trainable parameters
layers.0.fc_self.weight, torch.Size([64, 100])
layers.0.fc_neigh.weight, torch.Size([64, 100])
layers.1.fc_self.weight, torch.Size([47, 64])
layers.1.fc_neigh.weight, torch.Size([47, 64])
----------------------------------------
un-trainable parameters
