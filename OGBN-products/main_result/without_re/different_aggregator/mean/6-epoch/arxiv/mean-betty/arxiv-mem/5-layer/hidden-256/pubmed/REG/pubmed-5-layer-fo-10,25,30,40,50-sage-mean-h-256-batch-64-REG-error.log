main start at this time 1657103083.1124163
-----------------------------------------before load data 
 Nvidia-smi: 0.1717529296875 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

  NumNodes: 19717
  NumEdges: 88651
  NumFeats: 500
  NumClasses: 3
  NumTrainingSamples: 60
  NumValidationSamples: 500
  NumTestSamples: 1000
Done loading data from cached files.
success----------------------------------------
60
500
19157
# Nodes: 19717
# Edges: 88648
# Train: 60
# Val: 500
# Test: 19157
# Classes: 3

----------------------------------------start of run function 
 Nvidia-smi: 0.1717529296875 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

in feats:  500
----------------------------------------before model to device 
 Nvidia-smi: 0.1717529296875 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

----------------------------------------after model to device
 Nvidia-smi: 1.0194091796875 GB
    Memory Allocated: 0.0024242401123046875  GigaBytes
Max Memory Allocated: 0.0024242401123046875  GigaBytes

----------------------------------------before generate dataloader block 
 Nvidia-smi: 1.0194091796875 GB
    Memory Allocated: 0.0024242401123046875  GigaBytes
Max Memory Allocated: 0.0024242401123046875  GigaBytes

The real block id is  4
get_global_graph_edges_ids_block function  spend 0.015134096145629883
global_2_local spend time (sec) 9.083747863769531e-05
----------------------------  graph partition start---------------------
g = dgl.graph((u,v))  spent  0.0004661083221435547
the counter of in-degree current block !!!!!!!!!!!!!!_______________!!!!!!!!!!
Counter({0: 294, 1: 26, 2: 6, 3: 6, 6: 4, 4: 3, 8: 3, 5: 2, 17: 2, 18: 1, 7: 1, 31: 1, 22: 1, 10: 1, 29: 1, 9: 1, 11: 1})

A = g.adjacency_matrix() spent  0.0005364418029785156
auxiliary_graph
Graph(num_nodes=354, num_edges=66,
      ndata_schemes={}
      edata_schemes={'w': Scheme(shape=(), dtype=torch.float32)})
get remove nodes spent  0.0006589889526367188
remove nodes length  294

auxiliary_graph.remove_nodes spent  0.0018017292022705078
after remove non output nodes the auxiliary_graph
Graph(num_nodes=60, num_edges=66,
      ndata_schemes={}
      edata_schemes={'w': Scheme(shape=(), dtype=torch.float32)})
auxiliary_graph_no_diag generation spent  0.0010139942169189453

the counter of shared neighbor distribution
Counter({1.0: 6})
6
Convert a graph into a bidirected graph: 0.000 seconds
Metis partitioning: 0.001 seconds
Split the graph: 0.013 seconds
