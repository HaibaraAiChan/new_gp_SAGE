main start at this time 1655105467.6217473
-----------------------------------------before load data 
 Nvidia-smi: 0.1717529296875 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

#nodes: 2449029
#edges: 123718024
#classes: 47
success----------------------------------------
196571
39255
2164782
# Nodes: 2400608
# Edges: 123718024
# Train: 196571
# Val: 39255
# Test: 2164782
# Classes: 47

----------------------------------------start of run function 
 Nvidia-smi: 0.1717529296875 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

in feats:  100
----------------------------------------before model to device 
 Nvidia-smi: 0.1717529296875 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

<class 'int'>
----------------------------------------after model to device
 Nvidia-smi: 1.0174560546875 GB
    Memory Allocated: 3.528594970703125e-05  GigaBytes
Max Memory Allocated: 3.528594970703125e-05  GigaBytes

----------------------------------------before generate dataloader block 
 Nvidia-smi: 1.0174560546875 GB
    Memory Allocated: 3.528594970703125e-05  GigaBytes
Max Memory Allocated: 3.528594970703125e-05  GigaBytes

-----------------------------------------after block dataloader generation 
 Nvidia-smi: 1.0174560546875 GB
    Memory Allocated: 3.528594970703125e-05  GigaBytes
Max Memory Allocated: 3.528594970703125e-05  GigaBytes

connection checking time:  0
block generation total time  0
average batch blocks generation time:  0
block dataloader generation time/epoch 1.4317331314086914
pseudo mini batch 0 input nodes size: 1854676
----------------------------------------before load block subtensor 
 Nvidia-smi: 1.0174560546875 GB
    Memory Allocated: 3.528594970703125e-05  GigaBytes
Max Memory Allocated: 3.528594970703125e-05  GigaBytes

----------------------------------------before batch input features to device
 Nvidia-smi: 1.0174560546875 GB
    Memory Allocated: 3.528594970703125e-05  GigaBytes
Max Memory Allocated: 3.528594970703125e-05  GigaBytes

----------------------------------------after batch input features to device
 Nvidia-smi: 1.7088623046875 GB
    Memory Allocated: 0.691441535949707  GigaBytes
Max Memory Allocated: 0.691441535949707  GigaBytes

<class 'torch.Tensor'>
----------------------------------------after  batch labels to device
 Nvidia-smi: 1.7283935546875 GB
    Memory Allocated: 0.692906379699707  GigaBytes
Max Memory Allocated: 0.692906379699707  GigaBytes

----------------------------------------after load block subtensor  
 Nvidia-smi: 1.7283935546875 GB
    Memory Allocated: 0.692906379699707  GigaBytes
Max Memory Allocated: 0.692906379699707  GigaBytes

----------------------------------------after blocks to device 
 Nvidia-smi: 2.0350341796875 GB
    Memory Allocated: 0.9312953948974609  GigaBytes
Max Memory Allocated: 0.9312953948974609  GigaBytes

----------------------------------------before batch_pred = model(blocks, batch_inputs) 
 Nvidia-smi: 2.0350341796875 GB
    Memory Allocated: 0.9312953948974609  GigaBytes
Max Memory Allocated: 0.9312953948974609  GigaBytes

---------------before aggre
 Nvidia-smi: 2.0350341796875 GB
    Memory Allocated: 0.9312953948974609  GigaBytes
Max Memory Allocated: 0.9312953948974609  GigaBytes

---------------               graph.srcdata['h'] =  feat_src
 Nvidia-smi: 2.0350341796875 GB
    Memory Allocated: 0.9312953948974609  GigaBytes
Max Memory Allocated: 0.9312953948974609  GigaBytes

---------------               graph.update_all(msg_fn, fn.mean('m', 'neigh'))
 Nvidia-smi: 3.5487060546875 GB
    Memory Allocated: 1.2436456680297852  GigaBytes
Max Memory Allocated: 1.8388848304748535  GigaBytes

---------------              h_neigh = graph.dstdata['neigh']
 Nvidia-smi: 3.5487060546875 GB
    Memory Allocated: 1.2436456680297852  GigaBytes
Max Memory Allocated: 1.8388848304748535  GigaBytes

---------------              h_neigh = self.fc_neigh(h_neigh)
 Nvidia-smi: 3.5487060546875 GB
    Memory Allocated: 1.2780632972717285  GigaBytes
Max Memory Allocated: 1.8388848304748535  GigaBytes

----------------------------------------after rst
 Nvidia-smi: 3.5487060546875 GB
    Memory Allocated: 1.3124809265136719  GigaBytes
Max Memory Allocated: 1.8388848304748535  GigaBytes

----------------------------------------end of model layers  after x = self.layers[-1](blocks[-1], x)
 Nvidia-smi: 3.5487060546875 GB
    Memory Allocated: 1.2780632972717285  GigaBytes
Max Memory Allocated: 1.8388848304748535  GigaBytes

torch.Size([196571, 47])
input nodes number: 1854676
output nodes number: 196571
edges number: 31995948
 in-degree:  tensor([233,  94,  69,  ...,  76,  24, 135], device='cuda:0',
       dtype=torch.int32)
Counter({800: 3460, 77: 1190, 79: 1185, 81: 1185, 88: 1183, 84: 1177, 75: 1169, 78: 1169, 83: 1165, 85: 1164, 82: 1160, 67: 1158, 87: 1156, 91: 1154, 86: 1151, 76: 1145, 89: 1142, 92: 1119, 80: 1117, 90: 1108, 69: 1107, 93: 1088, 71: 1080, 73: 1080, 94: 1069, 74: 1069, 70: 1068, 68: 1053, 72: 1052, 99: 1042, 97: 1034, 96: 1020, 95: 1017, 102: 1006, 54: 996, 65: 994, 61: 981, 66: 977, 98: 963, 52: 959, 62: 959, 48: 958, 58: 957, 100: 957, 63: 955, 101: 954, 64: 953, 59: 950, 107: 949, 104: 947, 106: 945, 105: 942, 103: 939, 43: 933, 60: 930, 51: 928, 47: 927, 57: 923, 56: 913, 53: 907, 55: 907, 108: 898, 112: 887, 45: 884, 49: 879, 50: 877, 109: 867, 41: 861, 115: 857, 111: 853, 40: 852, 110: 850, 113: 848, 120: 844, 117: 838, 114: 835, 122: 825, 39: 816, 119: 816, 42: 813, 121: 810, 46: 807, 44: 806, 118: 798, 33: 793, 37: 791, 128: 782, 38: 775, 116: 775, 28: 768, 125: 756, 35: 754, 136: 752, 126: 747, 124: 744, 123: 741, 36: 741, 32: 727, 138: 722, 127: 722, 130: 716, 129: 711, 133: 706, 135: 704, 134: 703, 132: 702, 14: 695, 31: 691, 30: 689, 140: 689, 34: 677, 145: 673, 15: 673, 25: 671, 26: 659, 7: 655, 131: 654, 139: 654, 137: 654, 141: 652, 23: 648, 27: 646, 24: 645, 29: 643, 10: 640, 150: 633, 143: 629, 11: 624, 144: 620, 142: 617, 13: 615, 16: 614, 148: 612, 147: 612, 146: 605, 18: 604, 149: 602, 22: 592, 155: 587, 21: 586, 19: 584, 12: 583, 154: 580, 152: 579, 151: 577, 157: 577, 9: 576, 153: 575, 20: 572, 17: 556, 6: 550, 159: 544, 156: 541, 158: 535, 164: 527, 160: 520, 8: 512, 165: 508, 169: 507, 161: 505, 172: 503, 163: 497, 166: 495, 170: 492, 168: 486, 162: 484, 171: 482, 167: 476, 177: 463, 4: 456, 179: 453, 180: 447, 175: 446, 5: 445, 182: 438, 173: 435, 181: 435, 185: 429, 176: 428, 184: 427, 174: 423, 178: 421, 199: 400, 187: 391, 188: 389, 186: 387, 193: 386, 190: 386, 192: 381, 189: 377, 191: 375, 3: 374, 183: 370, 195: 369, 208: 369, 196: 369, 194: 365, 198: 363, 204: 350, 203: 340, 209: 340, 197: 339, 200: 338, 207: 337, 202: 336, 206: 335, 201: 333, 213: 327, 214: 320, 211: 316, 224: 309, 231: 308, 216: 306, 215: 305, 219: 304, 205: 303, 218: 302, 210: 301, 221: 299, 228: 293, 217: 291, 212: 291, 225: 289, 222: 284, 220: 282, 223: 275, 233: 273, 226: 273, 230: 271, 227: 268, 239: 268, 238: 259, 244: 259, 249: 258, 234: 258, 237: 257, 229: 254, 240: 253, 235: 252, 246: 252, 232: 246, 236: 246, 247: 244, 241: 243, 245: 239, 242: 235, 257: 234, 243: 233, 250: 232, 255: 227, 2: 221, 248: 221, 252: 219, 264: 219, 254: 214, 259: 210, 267: 209, 268: 206, 251: 202, 253: 201, 258: 201, 266: 199, 260: 196, 269: 195, 273: 190, 265: 190, 270: 189, 263: 189, 278: 188, 277: 187, 262: 183, 276: 182, 261: 182, 282: 182, 256: 179, 274: 179, 285: 178, 272: 178, 271: 177, 280: 175, 299: 175, 284: 174, 1: 173, 290: 169, 291: 168, 303: 165, 295: 165, 287: 164, 279: 160, 288: 159, 315: 159, 286: 159, 298: 157, 294: 156, 300: 155, 292: 154, 283: 152, 297: 152, 302: 151, 301: 151, 289: 149, 305: 148, 275: 147, 293: 147, 306: 147, 281: 147, 312: 146, 307: 146, 311: 145, 316: 144, 313: 140, 310: 139, 296: 134, 304: 133, 309: 133, 318: 132, 320: 131, 314: 131, 308: 130, 319: 127, 332: 127, 342: 123, 326: 123, 328: 123, 323: 120, 321: 120, 322: 119, 333: 119, 317: 118, 344: 115, 351: 114, 327: 114, 340: 114, 331: 113, 324: 113, 336: 110, 325: 109, 355: 108, 349: 107, 365: 105, 341: 105, 329: 105, 353: 104, 345: 104, 330: 103, 338: 103, 339: 103, 359: 102, 357: 102, 334: 101, 381: 100, 378: 100, 362: 100, 371: 99, 383: 99, 337: 99, 348: 99, 380: 99, 356: 98, 360: 98, 350: 98, 370: 97, 354: 97, 363: 96, 343: 96, 372: 95, 385: 94, 335: 93, 347: 92, 376: 92, 352: 92, 374: 92, 375: 91, 368: 91, 361: 91, 373: 91, 366: 90, 346: 90, 393: 89, 369: 88, 364: 87, 384: 86, 377: 82, 390: 81, 386: 81, 416: 80, 395: 80, 398: 80, 387: 80, 392: 79, 407: 79, 397: 79, 389: 79, 358: 78, 419: 77, 382: 77, 421: 75, 418: 74, 402: 73, 367: 73, 400: 73, 429: 72, 401: 71, 417: 71, 408: 71, 379: 71, 450: 71, 394: 69, 406: 69, 431: 69, 453: 68, 388: 68, 391: 68, 405: 68, 427: 68, 410: 67, 409: 67, 404: 67, 411: 66, 399: 66, 467: 65, 440: 64, 433: 63, 412: 62, 413: 62, 446: 62, 447: 62, 396: 61, 434: 61, 426: 60, 451: 60, 425: 60, 475: 60, 424: 59, 432: 58, 430: 58, 415: 57, 464: 57, 454: 57, 420: 57, 460: 56, 428: 56, 441: 55, 423: 55, 484: 55, 462: 54, 514: 54, 435: 54, 461: 54, 444: 53, 445: 52, 481: 52, 468: 52, 403: 52, 459: 51, 448: 51, 443: 51, 439: 51, 422: 50, 476: 50, 437: 49, 507: 49, 436: 48, 498: 48, 472: 48, 438: 48, 442: 48, 465: 48, 478: 47, 473: 47, 458: 47, 480: 47, 489: 46, 456: 46, 494: 46, 469: 46, 455: 45, 479: 45, 477: 45, 491: 44, 519: 44, 487: 44, 500: 43, 510: 43, 414: 43, 457: 42, 471: 42, 534: 42, 470: 42, 483: 42, 518: 42, 516: 41, 564: 41, 463: 41, 526: 41, 553: 41, 540: 40, 511: 40, 536: 40, 486: 40, 517: 40, 521: 40, 499: 40, 495: 40, 520: 39, 449: 39, 541: 39, 502: 39, 466: 38, 482: 38, 505: 38, 503: 37, 538: 37, 513: 37, 535: 37, 524: 37, 598: 36, 603: 36, 555: 36, 550: 36, 474: 36, 452: 36, 532: 36, 497: 36, 506: 36, 490: 35, 530: 35, 504: 35, 527: 35, 554: 35, 563: 35, 512: 34, 488: 34, 493: 34, 515: 34, 531: 34, 492: 34, 595: 34, 556: 34, 537: 34, 565: 34, 551: 34, 559: 33, 528: 33, 496: 33, 533: 33, 548: 33, 542: 32, 523: 32, 545: 32, 612: 32, 557: 32, 501: 32, 546: 31, 525: 31, 485: 31, 588: 31, 624: 30, 529: 30, 606: 30, 577: 30, 566: 29, 575: 29, 604: 29, 586: 29, 579: 29, 509: 29, 585: 29, 600: 29, 508: 29, 617: 29, 543: 29, 539: 28, 636: 28, 522: 28, 552: 28, 569: 28, 602: 27, 642: 27, 558: 27, 580: 27, 601: 27, 570: 27, 589: 26, 596: 26, 561: 26, 547: 26, 549: 25, 576: 25, 613: 25, 560: 25, 584: 25, 582: 25, 571: 25, 726: 25, 592: 25, 616: 24, 678: 24, 626: 24, 625: 24, 581: 24, 568: 24, 544: 24, 666: 24, 620: 24, 597: 24, 619: 23, 574: 23, 628: 23, 573: 23, 594: 23, 631: 23, 638: 23, 634: 23, 629: 23, 562: 23, 665: 23, 614: 23, 658: 22, 737: 22, 609: 22, 654: 22, 702: 22, 578: 22, 641: 22, 679: 21, 650: 21, 623: 21, 667: 21, 669: 21, 591: 21, 643: 21, 607: 21, 615: 21, 653: 20, 647: 20, 583: 20, 772: 20, 711: 20, 686: 20, 676: 20, 645: 20, 567: 20, 587: 20, 646: 20, 608: 20, 627: 20, 648: 19, 724: 19, 731: 19, 590: 19, 655: 19, 611: 19, 651: 19, 688: 19, 649: 19, 572: 19, 618: 19, 751: 19, 610: 19, 719: 19, 671: 19, 663: 18, 661: 18, 630: 18, 695: 18, 681: 18, 599: 18, 687: 18, 635: 18, 769: 18, 740: 18, 644: 18, 639: 18, 664: 18, 673: 18, 698: 17, 710: 17, 763: 17, 720: 17, 680: 17, 621: 17, 709: 17, 708: 17, 700: 17, 715: 17, 730: 16, 712: 16, 745: 16, 674: 16, 714: 16, 660: 16, 652: 16, 727: 16, 697: 16, 738: 16, 716: 16, 784: 16, 593: 16, 682: 16, 670: 16, 633: 15, 699: 15, 785: 15, 668: 15, 683: 15, 692: 15, 739: 15, 605: 15, 672: 15, 734: 15, 755: 15, 684: 15, 757: 15, 729: 14, 675: 14, 728: 14, 662: 14, 632: 14, 732: 14, 722: 14, 792: 14, 689: 14, 659: 14, 637: 14, 705: 14, 797: 13, 622: 13, 788: 13, 760: 13, 768: 13, 766: 13, 775: 13, 780: 13, 640: 13, 717: 13, 756: 13, 685: 13, 677: 13, 735: 13, 721: 13, 725: 13, 754: 13, 691: 12, 791: 12, 693: 12, 749: 12, 690: 12, 713: 12, 657: 12, 656: 12, 733: 12, 765: 11, 742: 11, 758: 11, 798: 11, 741: 11, 759: 11, 776: 11, 762: 11, 782: 11, 752: 11, 701: 11, 703: 11, 750: 11, 706: 11, 799: 10, 779: 10, 767: 10, 736: 10, 790: 10, 694: 10, 743: 10, 723: 10, 773: 10, 777: 10, 744: 9, 770: 9, 771: 9, 696: 9, 718: 9, 774: 9, 783: 9, 781: 9, 704: 9, 778: 9, 786: 8, 764: 8, 707: 8, 794: 8, 796: 7, 789: 6, 747: 6, 793: 6, 795: 6, 746: 6, 753: 6, 787: 6, 761: 5, 748: 3})

-----------------------------------------batch_pred = model(blocks, batch_inputs) 
 Nvidia-smi: 3.5487060546875 GB
    Memory Allocated: 1.3281989097595215  GigaBytes
Max Memory Allocated: 1.8388848304748535  GigaBytes

-----------------------------------------after loss calculation
 Nvidia-smi: 3.5487060546875 GB
    Memory Allocated: 1.328199863433838  GigaBytes
Max Memory Allocated: 1.8388848304748535  GigaBytes

-----------------------------------------after loss backward
 Nvidia-smi: 3.5487060546875 GB
    Memory Allocated: 1.2205886840820312  GigaBytes
Max Memory Allocated: 1.8388848304748535  GigaBytes

-----------------------------------------after optimizer step
 Nvidia-smi: 3.5487060546875 GB
    Memory Allocated: 1.2206592559814453  GigaBytes
Max Memory Allocated: 1.8388848304748535  GigaBytes

-----------------------------------------after optimizer zero grad
 Nvidia-smi: 3.5487060546875 GB
    Memory Allocated: 1.2206592559814453  GigaBytes
Max Memory Allocated: 1.8388848304748535  GigaBytes

times | data loading | block to device | model prediction | loss calculation | loss backward |  optimizer step |
      |0.42233967781066895 |0.554051399230957 |0.8554115295410156 |0.00020837783813476562 |0.008656978607177734 |0.002138853073120117 |
----------------------------------------------------------pseudo_mini_loss sum 5.03895902633667
Total (block generation + training)time/epoch 3.279775619506836
* Pure training time/epoch 1.8428068161010742
Training time/epoch 1.8477067947387695
Training time without block to device /epoch 1.2936553955078125
Training time without total dataloading part /epoch 0.8664157390594482
load block tensor time/epoch 0.42233967781066895
block to device time/epoch 0.554051399230957
input features size transfer per epoch 1.341104507446289e-07
blocks size to device per epoch 8.940696716308594e-08
 Run 0| Epoch 0 |
Number of nodes for computation during this epoch:  1854676
Number of first layer input nodes during this epoch:  1854676
Number of first layer output nodes during this epoch:  196571
GraphSAGE(
  (layers): ModuleList(
    (0): SAGEConv(
      (fc_self): Linear(in_features=100, out_features=47, bias=False)
      (fc_neigh): Linear(in_features=100, out_features=47, bias=False)
    )
  )
  (bns): ModuleList()
  (dropout): Dropout(p=0.5, inplace=False)
)
total model parameters size  9400
trainable parameters
layers.0.fc_self.weight, torch.Size([47, 100])
layers.0.fc_neigh.weight, torch.Size([47, 100])
----------------------------------------
un-trainable parameters
